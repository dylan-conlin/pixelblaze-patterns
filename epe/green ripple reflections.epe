{
  "name": "green ripple reflections",
  "id": "Ktjben4j36Wqxnk8N",
  "sources": {
    "main": "/*\n  Green ripple reflections\n\n  Using a single hue of 0.3 (green), we can still output light and dark greens,\n  greys, white and black.\n*/\n\n// We can set up our own global \"constants\" (actually variables) by defining\n// them outside of any function.\nPI10 = PI2 * 5\nPI6  = PI2 * 3\n\nexport function beforeRender(delta) {\n  t1 = time(.03) * PI2 // A period of (0.03 * 65.535), or ~2 seconds\n  t2 = time(.05) * PI2\n  t3 = time(.04) * PI2\n}\n\nexport function render(index) {\n  // This will be used for saturation, creating the greys seen in the output\n  a = sin(index / pixelCount * PI10 + t1)\n  a = a * a\n\n  // Notice this is a different wave with longer wavelength travelling the other\n  // direction; This is part of how you might see a \"reflection\" in the output.\n  b = sin(index / pixelCount * PI6 - t2)\n  c = triangle((index / pixelCount * 3 + sin(t3)) / 2)\n\n  // Average of the three waves above. Range -2/3..1\n  v = (a + b + c) / 3\n\n  /*\n    Squaring v in this case is doing a little more than the typical gamma\n    correction. It adds wave reflections from the negative numbers. Clamping v\n    to be within 0..1 first loses these nice little murmurs.\n  */\n  \n  // v = clamp(v, 0, 1)     // Try uncommenting this\n  v = v * v\n\n  // As we said up top, a hue of 0.3 is green\n  hsv(.3, a, v)\n}\n"
  },
  "preview": ""
}