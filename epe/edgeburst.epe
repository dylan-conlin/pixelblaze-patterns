{
  "name": "edgeburst",
  "id": "wPnJGj5d5hzgeLbZD",
  "sources": {
    "main": "/*\n  Edgeburst\n  \n  The triangle() function is simple:\n  \n  output:   1  /\\    /\\\n              /  \\  /  \\   etc\n           0 /    \\/    \\/\n  input:    0  .5  1     2\n  \n  triangle() is the go-to function when you want to mirror something (space, or\n  time!) This pattern does both.\n  \n  Mirroring space is the building block for kaleidoscopes (see 'sound - spectro\n  kalidastrip', 'xorcery', and 'glitch bands'). In this pattern we mirror the\n  pixel's position (expressed as a percentage) around the middle of the strip\n  with `triangle(pct)`.\n  \n  Mirroring a 0..1 time sawtooth turns a looping timer into a backand-forth\n  repitition.\n*/\n\nexport function beforeRender(delta) {\n  t1 = triangle(time(.1))  // Mirror time (bounce)\n}\n\nexport function render(index) {\n  pct = index / pixelCount\n  edge = clamp(triangle(pct) + t1 * 4 - 2, 0, 1)  // Mirror space\n  v = triangle(edge)    // Doubles the frequency\n\n  h = edge * edge - .2  // Expand violets\n  \n  s = 1\n\n  hsv(h, s, v)\n}\n"
  },
  "preview": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACWAGQDASIAAhEBAxEB/8QAHQABAAICAwEBAAAAAAAAAAAAAAcIBgkCBAUBA//EADoQAAEDAgQEBAQFAgUFAAAAAAEAAgMEBQYHETESIUFhCFFxgRMUQpEiI6HR4TKxFRczRIJDYsHw8f/EABwBAQACAwEBAQAAAAAAAAAAAAAGBwMEBQIIAf/EADoRAAECBAQDBgQDBwUAAAAAAAEAAgMEBREGEiExB2GBExRBUXGhIjKR8BUjsRYXQsHR4fEkM1JTYv/aAAwDAQACEQMRAD8AZo+FuO40z3yUUd0pjzbNEAHt76qn+YvhTq6GSaa0FzyCSYXjhePbr/furOZf+JbEWF/hw1cgvFDyBbM7SQD168uh381Nloxjl9nJA2OTgt90LdTG8cEjTyJ9RzHMEhVjFxDjDBBEtimU7zLjTtG6m3ncfzsea69a4RV3Deaaw1Hzwt8h+Jv9W+v0Wnq+4SumHql0NZSSRub5tOv2/wDR3XjrbFmX4X47nSSPFLDeKQ82vaB8Rvv/APFT7MfwnT0kssloLuNu9PPq14269eu+uvmFYVHrVDxOzPSJgZ/FjtHD7+nNVuzEXdYola1BMtE2udWH0d4db8yqvIvexDgi74ZqXQ1lJKxw6Fuh/n21XgrpxoESA7LFbYqXsc2I0PYbg7Eag9URFzhgkqHhkbC9x6ALCAXGwXsAnQLguUcT5ncMbHPd5NGpUh4IyRv+MJY3R0ro4CRrI/8AC3Tl16+33VocqPCRTskhL6R91qdRr+HSJp5ffbrqVszLJemwTNVSM2DDH/I69B9+ijVQxBIyD+wBMSKdmM+J3W2g/XkqqYKydv8AjKZnwKV7YTvIeTdPXb7aqzuVnhIpxLGZ6Z1zqTpxRsb+WD3PXfqreYYyKtGFKJtRf6mGlhjHF8tHo0D1+3b0Xl4p8SOG8GQOoMIUDK2Vg4RMzRsQ2+vTnyP0gjlpqFVkfiLFn45kMFSTo8TbtHDQc+Q9bLsUfB2MMaO+Xusud7fNbm46Dp9F9sfhnfTW2Jkj6WiIH+iGj8IRQdec98XXW4SVD70+mLv+lA0BjfTXU/qiyDBXFOZ/OfPtaXa2udOWjbfRWnD4AUFrAIscF3j8Tt1VbC2cUUhZFVOMEm2jzyPoVKdnxhBWcD2SgPBBBB0IPQhVFXqWnEtwsrwaec8I+h/NqvuWxGXM7GfYHtP3stujY8naeQ2P8Q8/FbEsvvEViPCPw4n1P+K0Q5fCqHfjA5bO/fVTnZcysA5uQspq9jLdc3jQMkAY/Xt0PsVrFwvnI0FkdbrA7zcdW/f91KtnxjS3GMD4jXA91X9b4VYcxITO0SJ3aY3uzQX5t0t0srEjfsvjaAYc7DbmO5AF+o2Pseat5mL4Z4bvRSvpoYbxRuGvCQOMDsVT/MzwlmOaeS1h9PUN1Jp5wWn2PtudeymjL/P3EuDHMbBWm40Y/wBvVPLiN9n7jfrqOXIKfLBnBgbNSFlHeadluuDuQEwDST/2nY+3NV7GqOOcA/k12X75KD+MakDzJ3HUehVF1vg1U6KXTmFZi7N8nzNPq06j1FwPBaxsOeHHEl4u0tNNTvpoon8LpJdAP036eW/srO5S+EuljfEYaB1zqAR+ZI3SJp/87dz5q1/+XWC8HiW63W4xy0f9bGyPAbp31/lYPjTxS0dqgkoMIUEYaAW/NSN4WdeYG7tuw7rz+8GqV+J3PBVOOY7vcPlvzOgtzPRRukcPcYYtdlnnCXgDQhml/O7j4Hy1WV2TJzD2CKAVeIqyCKOJvEYQQ1jR3/lY9i7xOWbDcL6DCNAyYtHD8wRwxj33Pty7qtuMcxbliaqdU3i4yVbgeJrHO0jZv/S3Ybka791GOJcyqO1RuL5mt8hrv6DqpJTeEMafiCp43nTFdvkBs0cr/wAgB6r6BouBcJYHg53tD4g3J2vzJ1PVSzjfNK8YtmdLeLk+dmuogaeGJv8Ax67ddVFuIsxKS2ROLpmtA8yodxHmxW3J7mUgMbNuN+/sFg9VWz10pkqJXSv83FXBAn6TQIAlKJLta0eQsP7/AHqtSscQ7t7Cnts0bW0A6KTa/OZzqp5hjkfH0dtqiixFy3V+oON+0VZOxLVHOLu1RERR1RhF6Fqv9dZnh1LO5rR9B5t+y89FkZEfCdmYbFZIcR8JwfDNiPJSxhjOIxOZHWgxHbi11b/Clex44pLnEwtla5rhqCDqCqoLuW671dplD6Wd0XPUtB5H2Uuk8SRmDsptudvurEo+OJ+nOAinM33Vx7ni+WopIW1VbLPFC3SNkshcGDsCeW6j7E+aFHa2uBmaHc9BrzPoFC1xzGutfSxwh4hIGjnt5k+nksYklfM8vke57zu5x1JWw6uSdPh9jSoAYDrsALnfQKQ1jiLHmW9nKC3M/wBFm2Is0q+6Ocym1hYfrdv9lhdRUy1UpkmkdK87ucdSvzRRKZnZicdmjPJVSzc9Mzz88w8uKIiLSWgiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIuxRW+puMvw6aF8z/Jo29T0XprS45Wi5XprXPOVouV10WQ3DAl2t9Myd0HxGkakR8yP3WPuaWOLXAtcDoQdwssaXiy5tFaR6rNGl40ucsZpaea+IiLAtdERERERERERd+2WOtvDw2mgc8Hlxnk0e69sY6I7KwXKyMhviuDGC55LoLt2601d1lDKWB0p10JA5D1KkrDOTrp3MkrSZOvABo3+VLFjwLSW2JjWxNa1o0AA0AUvk8Nxog7Sadkb7qwqPgifqTgYoyt91EGGcoJapzJK0l3XgbyH8qWbBgCktkTQ2FrQOgGimDAOSuIcZyxi3258NKSNauoaWM05f09Xcj05ct1YLDeQWEMvKdlfietZX1bNDwS6cAdy2Ztv56lQ+ucScK4QvLyX+omNsrNdebth7nkrS/DsOYOgmNUYjQ4bjQnr5dVT+uwsx1NEJadzGSN1jc9mgePMeY9FH2KMqqS5BzhCA/o5vIj3Wx+bEmX2OY3WivoYoadpDIXysGnb0Op7KOcceFR5hfW4UrmVdOeYppna8uWztx13B9VHqVxmkZqJ3HFcm6Wc7YkEtsdr6XGnIjx0WnT8SYPxrDMODEaHbakEfXw+9VrNxBlrcbQ5zoWmojHTZw/dYlJG+J5Y9rmPG7XDQhXZxRgSss9Q6lu1umoZ9uGZmgPLodjv0JUZ4oyto7oxxMI4ujgNCPdWsKPJVWCJujRw9p2sbj6qO1rh5GgAxZI3B28QfQ/5VcEWa4hyuuFpLnU+s7B9Lho777FYbPTyU0hjljdG8btcNCopMyceUdljMIVRzUjMyT8kwwtK4IiLTWipewvk20lslbrO7yI0b9lKtnwbS26Jv5bWho8lOWX3h2xHi4xyOpv8ACqI6H4tQ38ZHZv76Kc7LllgHKSKOquL47lc2cw+XR7gdPpGw3OwWrW+KuHMNkyVFh95mNrM1F+btfa6+lowwvgmAYs7EbmG4BF+p2H3oq/Zf5BYkxk6N0FCbfRn/AHFUwtJHPZm5266b7qe7Dk3gbK6FlZe6hlxr2cx8Yh2h7N2H91j2YniXhs9FKymmgs1E0EcZI4yOw/f7KoGZni0Mk08drc+oqDqPmJyXH2Hvty7Kvo1Pxzj786uTHcpQ/wAA0JHkRuep9AqMrfGWp1ouk8KS9mbZ/laPVx1PoLA+CuZjrxIUlhopGW/4Fpo2DT4shAJHoqh5n+LdhmlbQyPr6k66TzHUf8R7eirHijMS9YrqXy1lZK/iP1O1032Gw36c+6xlzi4kkkk8yT1U1ouGsP4XaPw2Bni/9j9T0+x6Kq3UKPVInea/MGO7fKLiGOm59lNWG/E5iC23aWesf8zBK/iMb9h6abbd1aLKPxaU8roWU9xNFKeXy87tWO7A+3Ra81+tPVTUj+KGRzD26+q7k9Dka1CMvWJdsVh8bAEeh/x6rLNYakYrxGlbwIo2dD0+o2PstzNvzNwpmHQijxHQQfmDQylocw9/L+yw/GnhapLnBJX4Rr2OaQXCmkdxMPYHdv6ha4sCZ+X/AAjIxjqh1RTA845SXN67dR+vYK1OUvi1ppZIfg3B1tqDoPhSO1icfLt+h81Vz8A1OhxTP4Hny07mE478tdD1HVSmj4/xbg34Jsd5lxu5upt/6Yf1FuS8vGOXVxw1VOprxbpKRxPC1726sfv/AEu2OxOm/ZRjibLSjukbg6FrvI6cx6HotgVmzgw7jm3/ACeI6GCWKZvCZdA9jgfP+VjuL/DFZ8RQPr8I17Ii4cXy5PFGfbce3LspFTeL8aQiCmY3kjCdtnAu087eXMX9F9BUXHOEscQcj3BkQ7g7dQdR1WtC45N1UdU4QTlsfQOZxae+oRW8u+S+KLXXyU01jnlez64Bxsd3BRWiyr4IjtEVs7Ds7X/cA9r6Lrnh5TYhzseLHyd/dS/mX4oIrVSSNbUw2ejHINBHGfIaef3VP8x/FlLVSzR2oPc93I1E3N59um/XRV0vuLrpiGpfNWVckjnebtT9/wBuXZeMoVRqJQ8MMyUmXGfxe7Vx+/pyXxw3D3e4vea1GMxE8jowejfHrbmFkGI8dXjE9S6asrJXknXm7U/x7aLH0RdSNHiR3ZorrlS9jGw2hjAABsBoB0RERYF6RERERc4Z5Kd4fG8sd5grgi/QS03C/QSNQpHwNnjf8HSsa2pfLTg843nVp9unt9laLKjxc0rpIQ6sfaqjUDm7WJx5fbmeuhVFlyilfC8PjeWOHVp0WzMulqnBMrVYLYzD5jXofs81GZ/D0jPv7cAw4o2ez4XdbaH9T5rcZZvEfHV2+KSopYKuQj/WYQQ4ItS9vzGv9rpW09PXSMjbsA4j9AdEVcP4X4Ne4vAiNv4X25LVEDFcMZIdTGUbXbrbnpusZREU9UvREREREREREREREREREREREREX/9k="
}