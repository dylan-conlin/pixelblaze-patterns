{
  "name": "firework dust",
  "id": "HEn3sPAtZez2JRJcM",
  "sources": {
    "main": "/*\n  Firework dust is for sparkle ponies.\n\n  random(v) returns a random decimal number between 0 and v.\n\n  After Pixeblazers understand that random() can make things glitter, they've\n  been known to endlessly bedazzle other patterns by prepending any hsv() with:\n\n    v += random(1) > 0.01\n\n  Adding randomness to patterns can be a long and satifying quest.\n*/\n\nexport function render(index) {\n  // Every pixel is given a random hue from 0 to 1, IE the entire hue wheel\n  h = random(1)\n  \n  /*\n    If a random number between 0 and 100 is less than 90 (i.e. most of the \n    time), this comparison will return \"true\", which is also the value 1. A \n    saturation of 1 is a color, while saturation of 0 is white. So this makes \n    10% of the dust white.\n  */\n  s = random(100) < 90\n  \n  /* \n    If a random decimal between 0 and 1 is over 0.995, then the value is 1 and \n    the pixel is on. Otherwise it's zero (off). Another way of thinking about\n    this: The odds of a pixel being on are ~ 5-in-1000, or 1-in-200. \n  */\n  v = random(1) > .995\n  \n  hsv(h, s, v)\n}"
  },
  "preview": "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"
}