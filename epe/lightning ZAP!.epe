{
  "name": "lightning ZAP!",
  "id": "TkPYS2XhdyGYxZz8y",
  "sources": {
    "main": "/*\n  Lightning ZAP!\n  \n  This pattern was for a Halloween installation of bifurcated strips that split\n  off to took like lightning bolts. While many examples show smooth wave\n  functions, this example shows one way to work with bigger chunks of time.\n  \n  Strips: https://www.instagram.com/p/B4F-93EBNVV/\n  Installed: https://www.instagram.com/p/B4TuvDSBXHl/\n*/\n\n// Set up each bolt segment to be between 1/15th and 1/6th of the strip length\nboltMin = floor(pixelCount / 15)\nboltMax = ceil(pixelCount / 6)\ndelayFactor = 15  // Determines the time between successive bolt segments\nresetDelayFactor = 1000 // Determines the pause between complete lightning bolts\nfade = 15  // How fast each lightning bolt section fades out\n\npixels = array(pixelCount)\nx = 0\ntimer = 0\n\nexport function beforeRender(delta) {\n  // Most frames we are fading all pixels and counting down a timer\n  for (i = 0; i < pixelCount; i++)\n    pixels[i] -= (pixels[i] * fade * (delta / 1000)) + (1 >> 16)\n  \n  // `timer` is the ms remaining before we ignite a new lightning bolt section\n  timer -= delta\n  \n  if (timer <= 0) {\n    // New lightning bolt segment's size, in pixels\n    boltSize = boltMin + random(boltMax - boltMin)\n    while (boltSize-- > 0 && x < pixelCount) {\n      pixels[x++] = 1  // Fill these pixels bright white\n    }\n\n    timer = random(delayFactor) + delayFactor / 5\n    // Squaring makes longer delays, and makes them rarer. A delayFactor of 15\n    // produces 9ms-324ms timers between successive bolt segments igniting.\n    timer *= timer \n    \n    // If a lightning bolt has reached the end of the strip,\n    if (x >= pixelCount) {\n      x = 0\n      // Pause between bolts for 0.33-1.33 * resetDelayFactor milliseconds\n      timer = random(resetDelayFactor) + resetDelayFactor/3\n    }\n  }\n}\n\nexport function render(index) {\n  v = pixels[index]\n  hsv(2/3, 0, v)\n}\n"
  },
  "preview": "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"
}