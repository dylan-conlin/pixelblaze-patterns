{
  "name": "Line Dancer 2D",
  "id": "o68nSs6mN5Lu6a9ZW",
  "sources": {
    "main": "// Twisting line effect - basic idea from a PC screensaver I saw\n// long, long ago.  No idea where.\n// Re-imagined to be uniquely Pixelblaze-y\n//\n// Now with twist control and kaleidoscopic mirroring\n// 10/26/2021 - ZRanger1\n\nvar timebase = 0;\nvar t1;\nvar zoom;\nexport var speed = 4.6;\nexport var twist = 1.75;\nexport var nSides = 1;\nvar slice = PI / nSides;\n\ntranslate(-0.5,-0.5);\n\nexport function sliderSpeed(v) {\n  speed = 1+(9*v);\n}\n\nexport function sliderTwist(v) {\n  twist = 1.25+(0.75*v);\n}\n\nexport function sliderReflections(v) {\n  nSides = 1+floor(6*v);\n  slice = PI / nSides;\n}\n\n// sets up a kaleidoscope effect - makes the image repeat over evenly divided\n// rotated \"slices\" about the center.\nvar outx,outy;\n\nfunction kal(x,y,t1) {\n  var angle = atan2(y, x);\n  angle = mod(angle, 2.0 * slice);\n  \n  // uncomment to reflect each slice so they can be tiled\n  // evenly if you like.\n  //angle = abs (angle - slice);\n  \n  // rotate image over time\n  angle += PI*timebase;\n  \n  // map new rotated coordinates back to original image space\n  var d = hypot(x,y);\n  outx = d * cos(angle);  outy = d * sin(angle);\n}\n\nexport function beforeRender(delta) {\n  timebase = (timebase + delta/1000) % 1000;\n  t1 = timebase * speed;\n  zoom = wave(time(0.075));\n}\n\nexport function render2D(index,x,y) {\n  var h,b,radius,theta;  \n  \n  if (nSides > 1) { kal(x,y,t1); x = outx; y = outy; }\n  \n  radius = twist-hypot(x,y)*2.4;\n  theta = radius * radius * sin(radius + t1);\n  x = (cos(theta) * x) - (sin(theta)* y);\n\n  b = 1-wave(x*4.6*zoom);\n  h = (x * zoom)+ zoom + theta/PI2;\n  hsv(h,1,b*b);\n}"
  },
  "preview": "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"
}