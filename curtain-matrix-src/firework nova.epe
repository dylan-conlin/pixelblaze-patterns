{
  "name": "firework nova",
  "id": "vrkynnKXTHavofomc",
  "sources": {
    "main": "export var scale = .5\nexport var patternSpeed; // declare the pattern speed variable\n\nexport function sliderPatternSpeed(v) {\n  patternSpeed = 0.1 + (1-v) * 0.08; // set pattern speed range from 0.01 to 0.11\n}\n\nexport var t1, t2;\n\nexport function beforeRender(delta) {\n  t1 = time(patternSpeed)\n  t2 = time(patternSpeed * 5)\n}\n\nexport function render3D(index, x, y, z) {\n  x -= 0.5\n  y -= 0.5\n  z -= 0.5\n  \n  r = sqrt(x*x + y*y + z*z) * scale\n  h = (x+y+z)/3 + t2\n  v = triangle(r - t1) - .75\n  \n  var spark = triangle(r - t1 + .2) - .75 > random(2)\n  if (spark) {\n    rgb(1,1,1) \n  } else {\n    v = v*4\n    v = v*v*v\n    hsv(h,1,v)\n  }\n}\n"
  },
  "preview": "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"
}