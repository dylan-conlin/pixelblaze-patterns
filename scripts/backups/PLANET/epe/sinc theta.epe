{
  "name": "sinc theta",
  "id": "PmogFY7TRaaMGmMFT",
  "sources": {
    "main": "//  Idea lifted from the brilliant mind of Yaroslaw Turbin (LDIRKO): https://editor.soulmatelights.com/gallery/984-sincx\n\nexport var timebase = 1.5; export function sliderSpeed(v) { timebase = 0.1 + 1.9 * (1 - v); }\nexport var scale = 1; export function sliderScale(v) { scale = 0.25 + 3.75 * (v); }\nexport var sizeB = 14; export function sliderSizeB(v) { sizeB = 1 + (sqrt(pixelCount) - 1) * (1 - v); }\nexport var sizeC = 8; export function sliderSizeC(v) { sizeC = 1 + (sqrt(pixelCount) - 1) * (1 - v); }\nexport var gamma = 3; export function sliderGamma(v) { gamma = 1 + floor(5 * v); }\n\nexport function beforeRender(delta) {\n  a = scale * PI2 * time(timebase);\n  a3= scale * PI2 * time(timebase / sizeB);\n  a4= scale * PI2 * time(timebase / 4);\n}\n\n// You can also project up a dimension. Think of this as mixing in the z value\n// to x and y in order to compose a stack of matrices.\nexport function render3D(index, x, y, z) {\n  x1 = (x - cos(z / 4 * PI2)) / 2\n  y1 = (y - sin(z / 4 * PI2)) / 2\n  render2D(index, x1, y1)\n}\n\nexport function render2D(index, x, y) {\n  \n  var rad = hypot(x-cos(a3), y-cos(a4));\n  var r = pow(1-cos(((PI2*rad)-a))/rad, gamma);\n\n  var rad = hypot(x-cos(a3+PI/2), y-cos(a4-PI/4));\n  var g = pow(1-cos((PI2*rad)-a+PI/2)/rad, gamma);\n\n  rad = hypot(x-cos(a3-PI), y-cos(a4+PI/4));\n  var b = pow(1-cos((PI2*rad)-a+PI)/rad, gamma);\n\n  rgb(r,g,b);\n}\n"
  },
  "preview": "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"
}