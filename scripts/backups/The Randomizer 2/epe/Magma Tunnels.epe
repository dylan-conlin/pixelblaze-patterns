{
  "name": "Magma Tunnels",
  "id": "RoyCtg2A9RYgJz9fD",
  "sources": {
    "main": "\n/*\n Magma Tunnel 2D\n \n More fun things you can do with Perlin noise...\n \n 11/1/2022 ZRanger1\n*/\n\ntranslate(-0.5,-0.5);\nvar timebase = 0;\nexport var density = 0.7;\nexport var speed = 1;\n\n// rotate point around origin by by <angle> radians\n// place result in globals outx, outy\nvar outx,outy\nfunction rotate2D(inx,iny,angle) {\n   var cosT = cos(angle);\n   var sinT = sin(angle);  \n  \n    var x = inx - 0.5;  var y = iny - 0.5;\n    outx = (cosT * x) - (sinT * y) + 0.5;\n    outy = (sinT * x) + (cosT * y) + 0.5;\n}\n\nexport function beforeRender(delta) {\n  timebase = (timebase + delta/1000) % 3600;\n  \n  // per-frame animation timers\n  t1 = time(.51);\n  noiseTime = timebase * speed;\n  noiseYTime = timebase * speed;\n}\n\nexport function render2D(index, x, y) {\n  // make a simple tunnel effect by rotating every pixel a little according to how far it is\n  // from the center.\n  dist = density/hypot(x,y);\n  rotate2D(x,y,dist);\n\n  // use noise field to color and light the transformed pixels\n  v = perlin(outx+noiseTime,outy + noiseYTime,timebase,t1)\n  \n  // squaring the result gives us absolute value, plus a little additional contrast\n  v = v * v;    \n\n  // manage color and saturation. I let hue bleed a little bit into the blue-green\n  // once in a while just to add a little extra interest. \n  hsv(0.02*v+v*.55,1-v*0.25,v);\n}\n\n// You can also project up a dimension. Think of this as mixing in the z value\n// to x and y in order to compose a stack of matrices.\nexport function render3D(index, x, y, z) {\n  x1 = (x - cos(z / 4 * PI2)) / 2\n  y1 = (y - sin(z / 4 * PI2)) / 2\n  render2D(index, x1, y1)\n}"
  },
  "preview": "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"
}