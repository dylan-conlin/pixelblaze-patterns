{
  "name": "Lava Lamp",
  "id": "shKMYee89zA9psrgy",
  "sources": {
    "main": "// We're using the Perlin FBM function to generate a star field that we can fly through.\n// Lacunarity, gain, and octaves control the character of the Perlin FBM function.\n\nexport var lacunarity = 2 // The lacunarity controls the frequency of the octaves.\nexport var gain = 0.5 // The gain controls the amplitude of the octaves.\nexport var octaves = 4 // The number of noise functions summed together.\n\n// Zoom value, allows to control the density of the star field.\nexport var zoom = 1.0 \n\n// Slider for zoom value, range from 1 to 20.\n// The slider is reversed, i.e., moving the slider to the right (towards 1), decreases zoom,\n// creating an effect of being further from the stars.\nexport function sliderZoom(v) {\n  zoom = 1 + (1 - v) * 19 // Subtract v from 1 to reverse the slider.\n}\n\n// Slider to control lacunarity, between 1.0 and 3.0\nexport function sliderLacunarity(v) {\n  lacunarity = 1 + v * 2\n}\n\n// Slider to control gain, between 0.0 and 1.0\nexport function sliderGain(v) {\n  gain = v\n}\n\n// Slider to control octaves, between 1 and 8\nexport function sliderOctaves(v) {\n  octaves = 1 + floor(v * 7)\n}\n\n// Time variable to create animation.\nvar t = 0 \n\n// Before rendering, we update our time variable.\nexport function beforeRender(delta) {\n  t += delta / 2000 // Adjust speed of travel.\n}\n\n// For each pixel, we calculate its brightness and color based on Perlin noise.\nexport function render3D(index, x, y, z) {\n  // Generate Fractal Brownian Motion with coordinates scaled by zoom factor.\n  var n = perlinFbm(x*zoom, y*zoom, t, lacunarity, gain, octaves) \n\n  // The output of the Perlin function is between -1 and 1, so we shift and\n  // scale it to be a brightness value between 0 and 1.\n  n = (n + 1) / 2 \n\n  // Determine hue based on brightness (Perlin noise value).\n  var hue = n \n\n  // Set the current pixel to the calculated hue, saturation, and brightness.\n  hsv(hue, 1, n)\n}\n"
  },
  "preview": "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"
}