{
  "name": "tunnel-of-squares",
  "id": "sDbNPr4s9jzGLbBMA",
  "sources": {
    "main": "// Endless tunnel of spiraling squares\n// Stare at it long enough and optical illusion makes it seem\n// like the background is moving too.  \n//\n// MIT License\n// Take this code and make something cool!\n// 8/25/2021 ZRanger1\n\nvar t2;\nexport var speed = 5;\nexport var nSquares = 4;\nexport var h\nvar cosT = cos(0.1), sinT = sin(0.1);\n\nfunction signum(a) {\n  return (a > 0) - (a < 0)\n}\n\nexport var speed = 5;\nvar timebase;\n\nexport function sliderSpeed(v) {\n  speed = 1+9* v;\n}\n\nexport function sliderSquarocity(v) {\n  nSquares = 1+floor(6*v);\n}\n\ntranslate(-0.5,-0.5); \n\nexport function beforeRender(delta) {\n  timebase = (timebase + delta/1000) % 3600;\n  t2 = time(0.08);\n  t1 = speed * timebase;\n}\n\n// squared spiral expression adapted from https://www.shadertoy.com/view/4tlfRB  \nexport function render2D(index,x,y) {\n  x1 = signum(x); y1 = signum(y);\n  sx = x1 * cosT + y1 * sinT;\n  sy = y1 * cosT - x1 * sinT;\n\n  dx = abs(sin(nSquares*log(x * sx + y * sy) + atan2(y,x) - t1))\n  h = (t2 + x*sx + y*sy)\n  hsv(h, 1, dx * dx * dx)\n}\n\n// You can also project up a dimension. Think of this as mixing in the z value\n// to x and y in order to compose a stack of matrices.\nexport function render3D(index, x, y, z) {\n  x1 = (x - cos(z / 4 * PI2)) / 2\n  y1 = (y - sin(z / 4 * PI2)) / 2\n  render2D(index, x1, y1)\n}"
  },
  "preview": "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"
}