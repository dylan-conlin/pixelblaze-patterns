{
  "name": "nebula",
  "id": "3tHNaPt4TmywLqRGY",
  "sources": {
    "main": "export var speed = 0.01;\nexport var hueShift = 0.5;\nexport var scale = 0.3;\nexport var zoom = 1.2;\nexport var autoZoom = 0;\nexport var zoomSpeed = 0.2;\n\nexport var sliderSpeed = function(v) { speed = 0.1 * (1-v); }\nexport var sliderHueShift = function(v) { hueShift = 1 * v; }\nexport var sliderScale = function(v) { scale = v; }\nexport var sliderZoom = function(v) { zoom = v * 1.5; }\nexport var toggleAutoZoom = function(v) { autoZoom = floor(v + 0.5); }\nexport var sliderZoomSpeed = function(v) { zoomSpeed = v; }\n\nvar t1;\n\nexport function beforeRender(delta) {\n  t1 = time(speed);\n  if(autoZoom) {\n    zoom = 0.2 + wave(time(zoomSpeed)) * 1.8; \n  }\n    // sets the wrapping intervals for perlin noise, creating a seamless loop\n  setPerlinWrap(50, 50, 50); \n}\n\nexport function render2D(index, x, y) {\n  x /= zoom; // apply the zoom factor to x\n  y /= zoom; // apply the zoom factor to y\n\n  // 3D perlin noise to create a complex, organic flow\n  var noise = perlinTurbulence(x * scale, y * scale, t1 * scale, 1.5, 0.5, 3); \n\n  var hue = t1 + hueShift * noise; // shift hue based on noise and time\n  var saturation = noise; // vary saturation based on noise\n  var value = 1;\n\n  hsv(hue, 1, value);\n}\n"
  },
  "preview": ""
}