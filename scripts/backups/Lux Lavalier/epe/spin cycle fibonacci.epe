{
  "name": "spin cycle fibonacci",
  "id": "QesAG58BBMkhbjaPz",
  "sources": {
    "main": "/*\n  Spin cycle\n*/\n\nexport function beforeRender(delta) {\n  t1 = time(.1)\n}\n\nphysicalToFibonacci = [ 0, 13, 26, 39, 52, 57, 44, 31, 18, 5, 10, 23, 36, 49, 62, 54, 41, 28, 15, 2, 7, 20, 33, 46, 59, 51, 38, 25, 12, 4, 17, 30, 43, 56, 61, 48, 35, 22, 9, 1, 14, 27, 40, 53, 58, 45, 32, 19, 6, 11, 24, 37, 50, 63, 55, 42, 29, 16, 3, 8, 21, 34, 47, 60 ];\n\nexport function render(index) {\n  index = physicalToFibonacci[index];\n  pct = index / pixelCount  // Percent this pixel is into the overall strip\n  h = pct * (5 * wave(t1) + 5) + 2 * wave(t1)\n  h = h % .5 + t1  // Remainder has precedence over addition\n  v = triangle(5 * pct + 10 * t1)\n  v = v * v * v\n  hsv(h, 1, v)\n}\n"
  },
  "preview": "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"
}