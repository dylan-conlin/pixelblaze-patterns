{
  "name": "millipede 1d-2d controls",
  "id": "YLCnBNY7gFxK4ox6S",
  "sources": {
    "main": "/*\n  Millipede\n\n  There's something mesmerizing about the waves that travel along a millipede's\n  feet. This pattern's combination of wave()s and a remainder seems to capture\n  a similar motion.\n\n  Regarding the order of operations, remainder has the same precedence as\n  multiplication and division, so `a * b / c % d * e` happens left-to-right.\n*/\n\nspeed = 20\nlegs = 10\nexport var tiers = 1\n\nexport var cx = .5\nexport var cy = .5\n\nexport function sliderLegs(v) {\n  legs = 1 + floor(v*20)\n}\n\nexport function sliderSpeed(v) {\n  speed = 1 + floor(v*65)\n}\n\nexport function sliderPositionX(v) {\n  cx = v\n}\n\nexport function sliderPositionY(v) {\n  cy = v\n}\n\nexport function sliderTiers(v) {\n  tiers = 1 + floor(v * 4.99)\n}\n\n\nexport function beforeRender(delta) {\n  t1 = time(1 / speed)\n  t2 = time(2 / speed)\n}\n\nexport function render(index) {\n  h = index / pixelCount \n  h += (index / pixelCount + t2) * legs / 2 % .5\n  v = wave(h + t2)\n  v = v * v // Gamma correction\n  hsv(h, 1, v)\n}\n\nexport function render2D(index, x, y) {\n  x -= cx\n  y-= cy\n  \n  r = sqrt(x*x + y*y)\n  \n  t = floor(r * tiers) / tiers\n  \n  //use angle around a center point instead of distance on a strip\n  h = ((atan2(x, y ) + 1)/PI2 + 1) * .5 \n  h += (h + t2) * legs / 2 % .5\n  v = wave(h + t2 + t)\n  v = v * v // Gamma correction\n  hsv(h, 1, v)\n}\n"
  },
  "preview": "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"
}