{
  "name": "honeycomb 2D 3D with controls and bounce",
  "id": "J5ZdrPA8p5ivAE4Wx",
  "sources": {
    "main": "// Parameter names that correspond to Pixelblaze UI controls\nexport var shimmer = true;\nexport var speed = 3;\nexport var zoom = 0.17;\nexport var transition = 0.10;\nexport var secondsPerPalette = 10;\nexport var hFactor = 2;\nexport var waveSum\nexport var wavePhase1;\nexport var waveFrequency;\n\n// Internal state variables\nvar paletteIndex;\nvar totalFactor;\nvar wavePhase2;\nvar wavePhase3;\nvar timeSegment;\nvar lastPaletteIndex = -1;\nvar oneOverZoom = 1 / zoom;\nexport var x\n\nvar rangeSlider = function(v, minValue, maxValue, isFloored, isReversed) {\n  var valueRange = maxValue - minValue;\n  var scaledValue = minValue + (v * valueRange);\n  if (isReversed) {\n    scaledValue = maxValue - (v * valueRange);\n  }\n  if (isFloored) {\n    scaledValue = floor(scaledValue);\n  }\n  return scaledValue;\n};\nexport function sliderHFactor(v) { \n  hFactor = rangeSlider(v, 0.1, 20, false, false);\n}\nexport function sliderZoom(v) { \n  zoom = rangeSlider(v, 0.1, 0.8, false, false);\n}\nexport function sliderSpeed(v) { \n  speed = rangeSlider(v, 3, 5, false, true);\n}\nexport function sliderTransitionTime(v) {\n  transition = rangeSlider(v, 0.10, 0.20, false, false);\n}\nexport function toggleShimmer(v) {\n  shimmer = v;\n}\nexport function inputNumberSecondsPerPalette(v) {\n  secondsPerPalette = v;\n}\nexport function showNumberPalette() {\n  return paletteIndex;\n}\n// Helper function to handle palette transitions\nfunction handlePaletteTransitions() {\n  paletteIndex = time(secondsPerPalette / 65.536 * palettes.length) * palettes.length;\n\n  if (frac(paletteIndex) > (1-transition)) {\n    var transitionFactor = (frac(paletteIndex) - (1-transition)) * (1/transition);\n    if (shimmer) {\n      if (wave(transitionFactor/2 - .25) > random(1)) {\n        paletteIndex = mod(paletteIndex + 1, palettes.length);\n      }\n    }\n  }\n\n  // Only set the palette if the floor index has changed\n  if (lastPaletteIndex != lastPaletteIndex) {\n\n    var selectedPalette = palettes[lastPaletteIndex];\n    setPalette(selectedPalette);\n    lastPaletteIndex = lastPaletteIndex;\n  }\n}\n\n// This function gets called once every frame and is responsible for preparing the state for the render functions\nexport function beforeRender(delta) {\n  waveFrequency = wave(time(speed * 6.6 / 65.536)) * 5 + 2;\n  var common_speed_time = time(speed * 9.8 / 65.536);\n  wavePhase1 = wave(common_speed_time);\n  wavePhase3 = common_speed_time;\n  wavePhase2 = wave(time(speed * 12.5 / 65.536)) * PI2;\n  timeSegment = time(speed * 0.66 / 65.536);\n}\n\n\n// This function is responsible for rendering 3D patterns\nexport function render3D(index, x, y, z) {\n  handlePaletteTransitions();\n\n  // // Pattern code:\n  x *= oneOverZoom;\n  y *= oneOverZoom;\n\n  // Modify line responsible for left-right scrolling\n  // var waveX = x*2 + time(speed * 9.8 / 65.536); // linear transformation \n  var waveX = sin(x * waveFrequency + wavePhase1);\n  var waveY = cos(y * waveFrequency + wavePhase2);\n  waveSum = (1 + waveX + waveY) * .5;\n  var timeSegmentWave = wave(waveSum + timeSegment); // store wave operation in a variable\n\n  v = timeSegmentWave * timeSegmentWave * timeSegmentWave; // More drastic brightness contrast\n  h = triangle(waveSum) / 2 + wavePhase3;\n  paint(h, 1, v);\n}\n\nexport function render2D(index, r, phi) {\n  render3D(index, r, phi, .5) // Equatorial section\n}\n\nexport function render(index) {\n  render2D(index, index / pixelCount, 0)\n}\n\nvar lava = [0.0, 68/255, 1/255, 84/255, 0.18, 0.071, 0.0, 0.0, 0.376, 0.443, 0.0, 0.0, 0.424, 0.557, 0.012, 0.004, 0.467, 0.686, 0.067, 0.004, 0.573, 0.835, 0.173, 0.008, 0.682, 1.0, 0.322, 0.016, 0.737, 1.0, 0.451, 0.016, 0.792, 1.0, 0.612, 0.016, 0.855, 1.0, 0.796, 0.016, 0.918, 1.0, 1.0, 0.016, 0.957, 1.0, 1.0, 0.278, 1.0, 1.0, 1.0, 1.0,];\nvar ib_jul01 = [0.0, 0.761, 0.004, 0.004, 0.369, 0.004, 0.114, 0.071, 0.518, 0.224, 0.514, 0.11, 1.0, 0.443, 0.004, 0.004,];\nvar es_vintage_57 = [0.0, 0.008, 0.004, 0.004, 0.208, 0.071, 0.004, 0.0, 0.408, 0.271, 0.114, 0.004, 0.6, 0.655, 0.529, 0.039, 1.0, 0.18, 0.22, 0.016,];\nvar es_vintage_01 = [0.0, 0.016, 0.004, 0.004, 0.2, 0.063, 0.0, 0.004, 0.298, 0.38, 0.408, 0.012, 0.396, 1.0, 0.514, 0.075, 0.498, 0.263, 0.035, 0.016, 0.6, 0.063, 0.0, 0.004, 0.898, 0.016, 0.004, 0.004, 1.0, 0.016, 0.004, 0.004,];\nvar es_rivendell_15 = [0.0, 0.004, 0.055, 0.02, 0.396, 0.063, 0.141, 0.055, 0.647, 0.22, 0.267, 0.118, 0.949, 0.588, 0.612, 0.388, 1.0, 0.588, 0.612, 0.388,];\nvar rgi_15 = [0.0, 0.016, 0.004, 0.122, 0.122, 0.216, 0.004, 0.063, 0.247, 0.773, 0.012, 0.027, 0.373, 0.231, 0.008, 0.067, 0.498, 0.024, 0.008, 0.133, 0.624, 0.153, 0.024, 0.129, 0.749, 0.439, 0.051, 0.125, 0.875, 0.22, 0.035, 0.137, 1.0, 0.086, 0.024, 0.149,];\nvar retro2_16 = [0.0, 0.737, 0.529, 0.004, 1.0, 0.18, 0.027, 0.004,];\nvar Analogous_1 = [0.0, 0.012, 0.0, 1.0, 0.247, 0.09, 0.0, 1.0, 0.498, 0.263, 0.0, 1.0, 0.749, 0.557, 0.0, 0.176, 1.0, 1.0, 0.0, 0.0,];\nvar es_pinksplash_08 = [0.0, 0.494, 0.043, 1.0, 0.498, 0.773, 0.004, 0.086, 0.686, 0.824, 0.616, 0.675, 0.867, 0.616, 0.012, 0.439, 1.0, 0.616, 0.012, 0.439,];\nvar es_pinksplash_07 = [0.0, 0.898, 0.004, 0.004, 0.239, 0.949, 0.016, 0.247, 0.396, 1.0, 0.047, 1.0, 0.498, 0.976, 0.318, 0.988, 0.6, 1.0, 0.043, 0.922, 0.757, 0.957, 0.02, 0.267, 1.0, 0.91, 0.004, 0.02,];\nvar Coral_reef = [0.0, 0.157, 0.78, 0.773, 0.196, 0.039, 0.596, 0.608, 0.376, 0.004, 0.435, 0.471, 0.376, 0.169, 0.498, 0.635, 0.545, 0.039, 0.286, 0.435, 1.0, 0.004, 0.133, 0.278,];\nvar es_ocean_breeze_068 = [0.0, 0.392, 0.612, 0.6, 0.2, 0.004, 0.388, 0.537, 0.396, 0.004, 0.267, 0.329, 0.408, 0.137, 0.557, 0.659, 0.698, 0.0, 0.247, 0.459, 1.0, 0.004, 0.039, 0.039,];\nvar es_ocean_breeze_036 = [0.0, 0.004, 0.024, 0.027, 0.349, 0.004, 0.388, 0.435, 0.6, 0.565, 0.82, 1.0, 1.0, 0.0, 0.286, 0.322,];\nvar departure = [0.0, 0.031, 0.012, 0.0, 0.165, 0.09, 0.027, 0.0, 0.247, 0.294, 0.149, 0.024, 0.329, 0.663, 0.388, 0.149, 0.416, 0.835, 0.663, 0.467, 0.455, 1.0, 1.0, 1.0, 0.541, 0.529, 1.0, 0.541, 0.58, 0.086, 1.0, 0.094, 0.667, 0.0, 1.0, 0.0, 0.749, 0.0, 0.533, 0.0, 0.831, 0.0, 0.216, 0.0, 1.0, 0.0, 0.216, 0.0,];\nvar es_landscape_64 = [0.0, 0.0, 0.0, 0.0, 0.145, 0.008, 0.098, 0.004, 0.298, 0.059, 0.451, 0.02, 0.498, 0.31, 0.835, 0.004, 0.502, 0.494, 0.827, 0.184, 0.51, 0.737, 0.82, 0.969, 0.6, 0.565, 0.714, 0.804, 0.8, 0.231, 0.459, 0.98, 1.0, 0.004, 0.145, 0.753,];\nvar es_landscape_33 = [0.0, 0.004, 0.02, 0.0, 0.075, 0.125, 0.09, 0.004, 0.149, 0.631, 0.216, 0.004, 0.247, 0.898, 0.565, 0.004, 0.259, 0.153, 0.557, 0.29, 1.0, 0.004, 0.016, 0.004,];\nvar rainbowsherbet = [0.0, 1.0, 0.129, 0.016, 0.169, 1.0, 0.267, 0.098, 0.337, 1.0, 0.027, 0.098, 0.498, 1.0, 0.322, 0.404, 0.667, 1.0, 1.0, 0.949, 0.82, 0.165, 1.0, 0.086, 1.0, 0.341, 1.0, 0.255,];\nvar gr65_hult = [0.0, 0.969, 0.69, 0.969, 0.188, 1.0, 0.533, 1.0, 0.349, 0.863, 0.114, 0.886, 0.627, 0.027, 0.322, 0.698, 0.847, 0.004, 0.486, 0.427, 1.0, 0.004, 0.486, 0.427,];\nvar gr64_hult = [0.0, 0.004, 0.486, 0.427, 0.259, 0.004, 0.365, 0.31, 0.408, 0.204, 0.255, 0.004, 0.51, 0.451, 0.498, 0.004, 0.588, 0.204, 0.255, 0.004, 0.788, 0.004, 0.337, 0.282, 0.937, 0.0, 0.216, 0.176, 1.0, 0.0, 0.216, 0.176,];\nvar GMT_drywet = [0.0, 0.184, 0.118, 0.008, 0.165, 0.835, 0.576, 0.094, 0.329, 0.404, 0.859, 0.204, 0.498, 0.012, 0.859, 0.812, 0.667, 0.004, 0.188, 0.839, 0.831, 0.004, 0.004, 0.435, 1.0, 0.004, 0.027, 0.129,];\nvar ib15 = [0.0, 0.443, 0.357, 0.576, 0.282, 0.616, 0.345, 0.306, 0.349, 0.816, 0.333, 0.129, 0.42, 1.0, 0.114, 0.043, 0.553, 0.537, 0.122, 0.153, 1.0, 0.231, 0.129, 0.349,];\nvar Fuschia_7 = [0.0, 0.169, 0.012, 0.6, 0.247, 0.392, 0.016, 0.404, 0.498, 0.737, 0.02, 0.259, 0.749, 0.631, 0.043, 0.451, 1.0, 0.529, 0.078, 0.714,];\nvar es_emerald_dragon_08 = [0.0, 0.38, 1.0, 0.004, 0.396, 0.184, 0.522, 0.004, 0.698, 0.051, 0.169, 0.004, 1.0, 0.008, 0.039, 0.004,];\nvar Colorfull = [0.0, 0.039, 0.333, 0.02, 0.098, 0.114, 0.427, 0.071, 0.235, 0.231, 0.541, 0.165, 0.365, 0.325, 0.388, 0.204, 0.416, 0.431, 0.259, 0.251, 0.427, 0.482, 0.192, 0.255, 0.443, 0.545, 0.137, 0.259, 0.455, 0.753, 0.459, 0.384, 0.486, 1.0, 1.0, 0.537, 0.659, 0.392, 0.706, 0.608, 1.0, 0.086, 0.475, 0.682,];\nvar Magenta_Evening = [0.0, 0.278, 0.106, 0.153, 0.122, 0.51, 0.043, 0.2, 0.247, 0.835, 0.008, 0.251, 0.275, 0.91, 0.004, 0.259, 0.298, 0.988, 0.004, 0.271, 0.424, 0.482, 0.008, 0.2, 1.0, 0.18, 0.035, 0.137,];\nvar Pink_Purple = [0.0, 0.075, 0.008, 0.153, 0.098, 0.102, 0.016, 0.176, 0.2, 0.129, 0.024, 0.204, 0.298, 0.267, 0.243, 0.49, 0.4, 0.463, 0.733, 0.941, 0.427, 0.639, 0.843, 0.969, 0.447, 0.851, 0.957, 1.0, 0.478, 0.624, 0.584, 0.867, 0.584, 0.443, 0.306, 0.737, 0.718, 0.502, 0.224, 0.608, 1.0, 0.573, 0.157, 0.482,]\nvar Sunset_Real = [0.0, 0.471, 0.0, 0.0, 0.086, 0.702, 0.086, 0.0, 0.2, 1.0, 0.408, 0.0, 0.333, 0.655, 0.086, 0.071, 0.529, 0.392, 0.0, 0.404, 0.776, 0.063, 0.0, 0.51, 1.0, 0.0, 0.0, 0.627,]\nvar es_autumn_19 = [0.0, 0.102, 0.004, 0.004, 0.2, 0.263, 0.016, 0.004, 0.329, 0.463, 0.055, 0.004, 0.408, 0.537, 0.596, 0.204, 0.439, 0.443, 0.255, 0.004, 0.478, 0.522, 0.584, 0.231, 0.486, 0.537, 0.596, 0.204, 0.529, 0.443, 0.255, 0.004, 0.557, 0.545, 0.604, 0.18, 0.639, 0.443, 0.051, 0.004, 0.8, 0.216, 0.012, 0.004, 0.976, 0.067, 0.004, 0.004, 1.0, 0.067, 0.004, 0.004,];\nvar BlacK_Blue_Magenta_White = [0.0, 0.0, 0.0, 0.0, 0.165, 0.0, 0.0, 0.176, 0.329, 0.0, 0.0, 1.0, 0.498, 0.165, 0.0, 1.0, 0.667, 1.0, 0.0, 1.0, 0.831, 1.0, 0.216, 1.0, 1.0, 1.0, 1.0, 1.0,];\nvar BlacK_Magenta_Red = [0.0, 0.0, 0.0, 0.0, 0.247, 0.165, 0.0, 0.176, 0.498, 1.0, 0.0, 1.0, 0.749, 1.0, 0.0, 0.176, 1.0, 1.0, 0.0, 0.0,];\nvar BlacK_Red_Magenta_Yellow = [0.0, 0.0, 0.0, 0.0, 0.165, 0.165, 0.0, 0.0, 0.329, 1.0, 0.0, 0.0, 0.498, 1.0, 0.0, 0.176, 0.667, 1.0, 0.0, 1.0, 0.831, 1.0, 0.216, 0.176, 1.0, 1.0, 1.0, 0.0,];\nvar Blue_Cyan_Yellow = [0.0, 0.0, 0.0, 1.0, 0.247, 0.0, 0.216, 1.0, 0.498, 0.0, 1.0, 1.0, 0.749, 0.165, 1.0, 0.176, 1.0, 1.0, 1.0, 0.0,];\nvar palettes = [ib_jul01, es_vintage_57, es_vintage_01, es_rivendell_15, rgi_15, retro2_16, Analogous_1, es_pinksplash_08, es_pinksplash_07, Coral_reef, es_ocean_breeze_068, es_ocean_breeze_036, departure, es_landscape_64, es_landscape_33, rainbowsherbet, gr65_hult, gr64_hult, GMT_drywet, ib15, Fuschia_7, es_emerald_dragon_08, lava, Colorfull, Magenta_Evening, Pink_Purple, Sunset_Real, es_autumn_19, BlacK_Blue_Magenta_White, BlacK_Magenta_Red, BlacK_Red_Magenta_Yellow, Blue_Cyan_Yellow,];\n"
  },
  "preview": "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"
}