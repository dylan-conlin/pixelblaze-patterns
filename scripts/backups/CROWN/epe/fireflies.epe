{
  "name": "fireflies",
  "id": "Z6aFtRCE3AkpcP2E8",
  "sources": {
    "main": "/*\n  FireFlies\n  \n  This is a fork of the sparks pattern where each spark is:\n    - Slowed down \n    - Given a longer lifetime \n    - Allowed to loop from one end to the other\n  \n  This is a highly upvoted pattern generously contributed to the community\n  pattern library by an unknown person. Please reach out if you'd like an\n  attribution link here!\n*/\n\nsparkHue = .05       // Set the hue for each spark\nsparkSaturation = 1  // Set the saturation for each spark (0 = white)\nnumSparks = 1 + floor(pixelCount / 10)  // Scale number of sparks based on # LEDs\ndecay = .999          // Decay their energy/speed. Use .999 for slower\nmaxSpeed = .4        // The maximum initial speed of any spark / firefly\nnewThreshhold = .01  // Recycle any spark under this energy\n\nsparks = array(numSparks)\nsparkX = array(numSparks)\npixels = array(pixelCount)\n\n\nexport function beforeRender(delta) {\n  delta *= .1\n  \n  for (i = 0; i < pixelCount; i++) pixels[i] *= .9 // Air cooling\n  \n  for (i = 0; i < numSparks; i++) {\n    // Recycle dead sparks\n    if (abs(sparks[i]) <= newThreshhold) {\n      sparks[i] = (maxSpeed / 2) - random(maxSpeed)\n      sparkX[i] = random(pixelCount)\n    }\n    \n    sparks[i] *= decay  // Spark energy decay\n    sparkX[i] += sparks[i] * delta  // Advance each position \u221d its energy\n    \n    // Allow sparks to loop around each end\n    if (sparkX[i] >= pixelCount) sparkX[i] = 0\n    if (sparkX[i] < 0) sparkX[i] = pixelCount - 1\n    \n    // Heat up the pixel at this spark's X position\n    pixels[floor(sparkX[i])] += sparks[i]\n  }\n}\n\nexport function render(index) {\n  v = pixels[index]\n  hsv(sparkHue, sparkSaturation, v * v * 10)\n}\n"
  },
  "preview": "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"
}