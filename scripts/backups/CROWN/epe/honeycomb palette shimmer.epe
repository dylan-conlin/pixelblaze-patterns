{
  "name": "honeycomb palette shimmer",
  "id": "fZi2uY3tK9ft8QHrX",
  "sources": {
    "main": "// Parameter names that correspond to Pixelblaze UI controls\nexport var shimmer = true;\nexport var speed = 3;\nexport var zoom = 0.17;\nexport var transition = 0.10;\nexport var secondsPerPalette = 10;\nexport var hFactor = 2;\nexport var waveSum\nexport var wavePhase1;\nexport var waveFrequency;\n\n// Internal state variables\nvar paletteIndex;\nvar totalFactor;\nvar wavePhase2;\nvar wavePhase3;\nvar timeSegment;\nvar lastPaletteIndex = -1;\nexport var x\n\nvar rangeSlider = function(v, minValue, maxValue, isFloored, isReversed) {\n  var valueRange = maxValue - minValue;\n  var scaledValue = minValue + (v * valueRange);\n  if (isReversed) {\n    scaledValue = maxValue - (v * valueRange);\n  }\n  if (isFloored) {\n    scaledValue = floor(scaledValue);\n  }\n  return scaledValue;\n};\nexport function sliderHFactor(v) { \n  hFactor = rangeSlider(v, 0.1, 20, false, false);\n}\nexport function sliderZoom(v) { \n  zoom = rangeSlider(v, 0.1, 0.8, false, false);\n}\nexport function sliderSpeed(v) { \n  speed = rangeSlider(v, 3, 5, false, true);\n}\nexport function sliderTransitionTime(v) {\n  transition = rangeSlider(v, 0.10, 0.20, false, false);\n}\nexport function toggleShimmer(v) {\n  shimmer = v;\n}\nexport function inputNumberSecondsPerPalette(v) {\n  secondsPerPalette = v;\n}\nexport function showNumberPalette() {\n  return paletteIndex;\n}\n// Helper function to handle palette transitions\nfunction handlePaletteTransitions() {\n  paletteIndex = time(secondsPerPalette / 65.536 * palettes.length) * palettes.length;\n\n  if (frac(paletteIndex) > (1-transition)) {\n    var transitionFactor = (frac(paletteIndex) - (1-transition)) * (1/transition);\n    if (shimmer) {\n      if (wave(transitionFactor/2 - .25) > random(1)) {\n        paletteIndex = mod(paletteIndex + 1, palettes.length);\n      }\n    }\n  }\n\n  // Only set the palette if the floor index has changed\n  var floorPaletteIndex = floor(paletteIndex);\n  if (floorPaletteIndex != lastPaletteIndex) {\n    setPalette(palettes[floorPaletteIndex]);\n    lastPaletteIndex = floorPaletteIndex;\n  }\n}\n\n// This function gets called once every frame and is responsible for preparing the state for the render functions\nexport function beforeRender(delta) {\n  waveFrequency = wave(time(speed * 6.6 / 65.536)) * 5 + 2 \n  wavePhase1 = wave(time(speed * 9.8 / 65.536))\n  wavePhase2 = wave(time(speed * 12.5 / 65.536)) * PI2\n  wavePhase3 = wave(time(speed * 9.8 / 65.536));\n  timeSegment = time(speed * 0.66 / 65.536);\n}\n\n// This function is responsible for rendering 3D patterns\nexport function render3D(index, x, y, z) {\n  handlePaletteTransitions();\n\n  // // Pattern code:\n  x /= zoom\n  y /= zoom\n\n  // Modify line responsible for left-right scrolling\n  var waveX = x*2 + time(speed * 9.8 / 65.536); // linear transformation \n  var waveX = sin(x * waveFrequency + wavePhase1); // store these expensive operations in variables\n  var waveY = cos(y * waveFrequency + wavePhase2);\n  waveSum = (1 + waveX + waveY) * .5;\n  var timeSegmentWave = wave(waveSum + timeSegment); // store wave operation in a variable\n\n  v = timeSegmentWave * timeSegmentWave * timeSegmentWave; // More drastic brightness contrast\n  h = triangle(waveSum) / 2 + wavePhase3;\n  paint(h, 1, v);\n}\n\nexport function render2D(index, r, phi) {\n  render3D(index, r, phi, .5) // Equatorial section\n}\n\nexport function render(index) {\n  render2D(index, index / pixelCount, 0)\n}\n\nvar lava = [0.0, 68/255, 1/255, 84/255, 0.18, 0.071, 0.0, 0.0, 0.376, 0.443, 0.0, 0.0, 0.424, 0.557, 0.012, 0.004, 0.467, 0.686, 0.067, 0.004, 0.573, 0.835, 0.173, 0.008, 0.682, 1.0, 0.322, 0.016, 0.737, 1.0, 0.451, 0.016, 0.792, 1.0, 0.612, 0.016, 0.855, 1.0, 0.796, 0.016, 0.918, 1.0, 1.0, 0.016, 0.957, 1.0, 1.0, 0.278, 1.0, 1.0, 1.0, 1.0,];\nvar ib_jul01 = [0.0, 0.761, 0.004, 0.004, 0.369, 0.004, 0.114, 0.071, 0.518, 0.224, 0.514, 0.11, 1.0, 0.443, 0.004, 0.004,];\nvar es_vintage_57 = [0.0, 0.008, 0.004, 0.004, 0.208, 0.071, 0.004, 0.0, 0.408, 0.271, 0.114, 0.004, 0.6, 0.655, 0.529, 0.039, 1.0, 0.18, 0.22, 0.016,];\nvar es_vintage_01 = [0.0, 0.016, 0.004, 0.004, 0.2, 0.063, 0.0, 0.004, 0.298, 0.38, 0.408, 0.012, 0.396, 1.0, 0.514, 0.075, 0.498, 0.263, 0.035, 0.016, 0.6, 0.063, 0.0, 0.004, 0.898, 0.016, 0.004, 0.004, 1.0, 0.016, 0.004, 0.004,];\nvar es_rivendell_15 = [0.0, 0.004, 0.055, 0.02, 0.396, 0.063, 0.141, 0.055, 0.647, 0.22, 0.267, 0.118, 0.949, 0.588, 0.612, 0.388, 1.0, 0.588, 0.612, 0.388,];\nvar rgi_15 = [0.0, 0.016, 0.004, 0.122, 0.122, 0.216, 0.004, 0.063, 0.247, 0.773, 0.012, 0.027, 0.373, 0.231, 0.008, 0.067, 0.498, 0.024, 0.008, 0.133, 0.624, 0.153, 0.024, 0.129, 0.749, 0.439, 0.051, 0.125, 0.875, 0.22, 0.035, 0.137, 1.0, 0.086, 0.024, 0.149,];\nvar retro2_16 = [0.0, 0.737, 0.529, 0.004, 1.0, 0.18, 0.027, 0.004,];\nvar Analogous_1 = [0.0, 0.012, 0.0, 1.0, 0.247, 0.09, 0.0, 1.0, 0.498, 0.263, 0.0, 1.0, 0.749, 0.557, 0.0, 0.176, 1.0, 1.0, 0.0, 0.0,];\nvar es_pinksplash_08 = [0.0, 0.494, 0.043, 1.0, 0.498, 0.773, 0.004, 0.086, 0.686, 0.824, 0.616, 0.675, 0.867, 0.616, 0.012, 0.439, 1.0, 0.616, 0.012, 0.439,];\nvar es_pinksplash_07 = [0.0, 0.898, 0.004, 0.004, 0.239, 0.949, 0.016, 0.247, 0.396, 1.0, 0.047, 1.0, 0.498, 0.976, 0.318, 0.988, 0.6, 1.0, 0.043, 0.922, 0.757, 0.957, 0.02, 0.267, 1.0, 0.91, 0.004, 0.02,];\nvar Coral_reef = [0.0, 0.157, 0.78, 0.773, 0.196, 0.039, 0.596, 0.608, 0.376, 0.004, 0.435, 0.471, 0.376, 0.169, 0.498, 0.635, 0.545, 0.039, 0.286, 0.435, 1.0, 0.004, 0.133, 0.278,];\nvar es_ocean_breeze_068 = [0.0, 0.392, 0.612, 0.6, 0.2, 0.004, 0.388, 0.537, 0.396, 0.004, 0.267, 0.329, 0.408, 0.137, 0.557, 0.659, 0.698, 0.0, 0.247, 0.459, 1.0, 0.004, 0.039, 0.039,];\nvar es_ocean_breeze_036 = [0.0, 0.004, 0.024, 0.027, 0.349, 0.004, 0.388, 0.435, 0.6, 0.565, 0.82, 1.0, 1.0, 0.0, 0.286, 0.322,];\nvar departure = [0.0, 0.031, 0.012, 0.0, 0.165, 0.09, 0.027, 0.0, 0.247, 0.294, 0.149, 0.024, 0.329, 0.663, 0.388, 0.149, 0.416, 0.835, 0.663, 0.467, 0.455, 1.0, 1.0, 1.0, 0.541, 0.529, 1.0, 0.541, 0.58, 0.086, 1.0, 0.094, 0.667, 0.0, 1.0, 0.0, 0.749, 0.0, 0.533, 0.0, 0.831, 0.0, 0.216, 0.0, 1.0, 0.0, 0.216, 0.0,];\nvar es_landscape_64 = [0.0, 0.0, 0.0, 0.0, 0.145, 0.008, 0.098, 0.004, 0.298, 0.059, 0.451, 0.02, 0.498, 0.31, 0.835, 0.004, 0.502, 0.494, 0.827, 0.184, 0.51, 0.737, 0.82, 0.969, 0.6, 0.565, 0.714, 0.804, 0.8, 0.231, 0.459, 0.98, 1.0, 0.004, 0.145, 0.753,];\nvar es_landscape_33 = [0.0, 0.004, 0.02, 0.0, 0.075, 0.125, 0.09, 0.004, 0.149, 0.631, 0.216, 0.004, 0.247, 0.898, 0.565, 0.004, 0.259, 0.153, 0.557, 0.29, 1.0, 0.004, 0.016, 0.004,];\nvar rainbowsherbet = [0.0, 1.0, 0.129, 0.016, 0.169, 1.0, 0.267, 0.098, 0.337, 1.0, 0.027, 0.098, 0.498, 1.0, 0.322, 0.404, 0.667, 1.0, 1.0, 0.949, 0.82, 0.165, 1.0, 0.086, 1.0, 0.341, 1.0, 0.255,];\nvar gr65_hult = [0.0, 0.969, 0.69, 0.969, 0.188, 1.0, 0.533, 1.0, 0.349, 0.863, 0.114, 0.886, 0.627, 0.027, 0.322, 0.698, 0.847, 0.004, 0.486, 0.427, 1.0, 0.004, 0.486, 0.427,];\nvar gr64_hult = [0.0, 0.004, 0.486, 0.427, 0.259, 0.004, 0.365, 0.31, 0.408, 0.204, 0.255, 0.004, 0.51, 0.451, 0.498, 0.004, 0.588, 0.204, 0.255, 0.004, 0.788, 0.004, 0.337, 0.282, 0.937, 0.0, 0.216, 0.176, 1.0, 0.0, 0.216, 0.176,];\nvar GMT_drywet = [0.0, 0.184, 0.118, 0.008, 0.165, 0.835, 0.576, 0.094, 0.329, 0.404, 0.859, 0.204, 0.498, 0.012, 0.859, 0.812, 0.667, 0.004, 0.188, 0.839, 0.831, 0.004, 0.004, 0.435, 1.0, 0.004, 0.027, 0.129,];\nvar ib15 = [0.0, 0.443, 0.357, 0.576, 0.282, 0.616, 0.345, 0.306, 0.349, 0.816, 0.333, 0.129, 0.42, 1.0, 0.114, 0.043, 0.553, 0.537, 0.122, 0.153, 1.0, 0.231, 0.129, 0.349,];\nvar Fuschia_7 = [0.0, 0.169, 0.012, 0.6, 0.247, 0.392, 0.016, 0.404, 0.498, 0.737, 0.02, 0.259, 0.749, 0.631, 0.043, 0.451, 1.0, 0.529, 0.078, 0.714,];\nvar es_emerald_dragon_08 = [0.0, 0.38, 1.0, 0.004, 0.396, 0.184, 0.522, 0.004, 0.698, 0.051, 0.169, 0.004, 1.0, 0.008, 0.039, 0.004,];\nvar Colorfull = [0.0, 0.039, 0.333, 0.02, 0.098, 0.114, 0.427, 0.071, 0.235, 0.231, 0.541, 0.165, 0.365, 0.325, 0.388, 0.204, 0.416, 0.431, 0.259, 0.251, 0.427, 0.482, 0.192, 0.255, 0.443, 0.545, 0.137, 0.259, 0.455, 0.753, 0.459, 0.384, 0.486, 1.0, 1.0, 0.537, 0.659, 0.392, 0.706, 0.608, 1.0, 0.086, 0.475, 0.682,];\nvar Magenta_Evening = [0.0, 0.278, 0.106, 0.153, 0.122, 0.51, 0.043, 0.2, 0.247, 0.835, 0.008, 0.251, 0.275, 0.91, 0.004, 0.259, 0.298, 0.988, 0.004, 0.271, 0.424, 0.482, 0.008, 0.2, 1.0, 0.18, 0.035, 0.137,];\nvar Pink_Purple = [0.0, 0.075, 0.008, 0.153, 0.098, 0.102, 0.016, 0.176, 0.2, 0.129, 0.024, 0.204, 0.298, 0.267, 0.243, 0.49, 0.4, 0.463, 0.733, 0.941, 0.427, 0.639, 0.843, 0.969, 0.447, 0.851, 0.957, 1.0, 0.478, 0.624, 0.584, 0.867, 0.584, 0.443, 0.306, 0.737, 0.718, 0.502, 0.224, 0.608, 1.0, 0.573, 0.157, 0.482,]\nvar Sunset_Real = [0.0, 0.471, 0.0, 0.0, 0.086, 0.702, 0.086, 0.0, 0.2, 1.0, 0.408, 0.0, 0.333, 0.655, 0.086, 0.071, 0.529, 0.392, 0.0, 0.404, 0.776, 0.063, 0.0, 0.51, 1.0, 0.0, 0.0, 0.627,]\nvar es_autumn_19 = [0.0, 0.102, 0.004, 0.004, 0.2, 0.263, 0.016, 0.004, 0.329, 0.463, 0.055, 0.004, 0.408, 0.537, 0.596, 0.204, 0.439, 0.443, 0.255, 0.004, 0.478, 0.522, 0.584, 0.231, 0.486, 0.537, 0.596, 0.204, 0.529, 0.443, 0.255, 0.004, 0.557, 0.545, 0.604, 0.18, 0.639, 0.443, 0.051, 0.004, 0.8, 0.216, 0.012, 0.004, 0.976, 0.067, 0.004, 0.004, 1.0, 0.067, 0.004, 0.004,];\nvar BlacK_Blue_Magenta_White = [0.0, 0.0, 0.0, 0.0, 0.165, 0.0, 0.0, 0.176, 0.329, 0.0, 0.0, 1.0, 0.498, 0.165, 0.0, 1.0, 0.667, 1.0, 0.0, 1.0, 0.831, 1.0, 0.216, 1.0, 1.0, 1.0, 1.0, 1.0,];\nvar BlacK_Magenta_Red = [0.0, 0.0, 0.0, 0.0, 0.247, 0.165, 0.0, 0.176, 0.498, 1.0, 0.0, 1.0, 0.749, 1.0, 0.0, 0.176, 1.0, 1.0, 0.0, 0.0,];\nvar BlacK_Red_Magenta_Yellow = [0.0, 0.0, 0.0, 0.0, 0.165, 0.165, 0.0, 0.0, 0.329, 1.0, 0.0, 0.0, 0.498, 1.0, 0.0, 0.176, 0.667, 1.0, 0.0, 1.0, 0.831, 1.0, 0.216, 0.176, 1.0, 1.0, 1.0, 0.0,];\nvar Blue_Cyan_Yellow = [0.0, 0.0, 0.0, 1.0, 0.247, 0.0, 0.216, 1.0, 0.498, 0.0, 1.0, 1.0, 0.749, 0.165, 1.0, 0.176, 1.0, 1.0, 1.0, 0.0,];\nvar palettes = [ib_jul01, es_vintage_57, es_vintage_01, es_rivendell_15, rgi_15, retro2_16, Analogous_1, es_pinksplash_08, es_pinksplash_07, Coral_reef, es_ocean_breeze_068, es_ocean_breeze_036, departure, es_landscape_64, es_landscape_33, rainbowsherbet, gr65_hult, gr64_hult, GMT_drywet, ib15, Fuschia_7, es_emerald_dragon_08, lava, Colorfull, Magenta_Evening, Pink_Purple, Sunset_Real, es_autumn_19, BlacK_Blue_Magenta_White, BlacK_Magenta_Red, BlacK_Red_Magenta_Yellow, Blue_Cyan_Yellow,];\n"
  },
  "preview": "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"
}