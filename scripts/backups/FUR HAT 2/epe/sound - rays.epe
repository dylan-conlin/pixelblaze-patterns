{
  "name": "sound - rays",
  "id": "4WzG757FTap4rvyMv",
  "sources": {
    "main": "//This pattern uses the sensor expansion board\n\nexport var energyAverage\nexport var maxFrequencyMagnitude\nexport var maxFrequency\n\n\nvals = array(pixelCount)\nhues = array(pixelCount)\npos = 0\nlastVal = 0\n\npic = makePIController(.05, .35, 30, 0, 400)\n\n// Makes a new PI Controller\nfunction makePIController(kp, ki, start, min, max) {\n  var pic = array(5)\n  pic[0] = kp\n  pic[1] = ki\n  pic[2] = start\n  pic[3] = min\n  pic[4] = max\n  return pic\n}\n\nfunction calcPIController(pic, err) {\n  pic[2] = clamp(pic[2] + err, pic[3], pic[4])\n  return pic[0] * err + pic[1] * pic[2]\n}\n\nexport function beforeRender(delta) {\n\n  sensitivity = calcPIController(pic, .5 - lastVal)\n\n  t1 = time(.1)\n  pos = (pos + delta * .05) % pixelCount\n  lastVal = vals[pos] = pow(maxFrequencyMagnitude * sensitivity, 2)\n  hues[pos] = maxFrequency / 5000\n}\n\nexport function render(index) {\n  index = pixelCount - index\n  i = (index + pos + 0) % pixelCount\n  v = vals[i]\n  v = v * v\n  h = hues[i] + index / pixelCount / 4 + t1\n  hsv(h, 1, v)\n}\n"
  },
  "preview": "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"
}