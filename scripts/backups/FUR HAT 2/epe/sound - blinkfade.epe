{
  "name": "sound - blinkfade",
  "id": "3PsHoBbA8rBsT75RG",
  "sources": {
    "main": "//This pattern uses the sensor expansion board\n\nexport var energyAverage\nexport var maxFrequency\n\ntargetFill = 0.2\n\nvals = array(pixelCount)\nhues = array(pixelCount)\nbrightnessFeedback = 0\npic = makePIController(.05, .15, 300, 0, 1000)\nsensitivity = 0\n\n// Makes a new PI Controller\nfunction makePIController(kp, ki, start, min, max) {\n  var pic = array(5)\n  pic[0] = kp\n  pic[1] = ki\n  pic[2] = start\n  pic[3] = min\n  pic[4] = max\n  return pic\n}\n\nfunction calcPIController(pic, err) {\n  pic[2] = clamp(pic[2] + err, pic[3], pic[4])\n  return pic[0] * err + pic[1] * pic[2]\n}\n\nexport function beforeRender(delta) {\n  sensitivity = calcPIController(pic, targetFill - brightnessFeedback / pixelCount);\n  brightnessFeedback = 0\n  for (i = 0; i < pixelCount; i++) {\n    vals[i] -= .005 * delta * .1 + abs(energyAverage * sensitivity / 5000)\n    if (vals[i] <= 0) {\n      vals[i] = energyAverage * sensitivity * random(1)\n      hues[i] = time(.07) + triangle(maxFrequency / 1000) * .2\n    }\n  }\n}\n\nexport function render(index) {\n  v = vals[index] * 3\n  v = v * v\n  brightnessFeedback += clamp(v, 0, 1)\n  hsv(hues[index], 1, v)\n}\n"
  },
  "preview": "/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAEAsMDgwKEA4NDhIREBMYKBoYFhYYMSMlHSg6Mz08OTM4N0BIXE5ARFdFNzhQbVFXX2JnaGc+TXF5cGR4XGVnY//bAEMBERISGBUYLxoaL2NCOEJjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY//AABEIAJYAZAMBIgACEQEDEQH/xAAaAAACAwEBAAAAAAAAAAAAAAADBAACBQEG/8QAPxAAAgEDAgIHBwEFBwQDAAAAAQIDAAQREiETMQUiQVFhkaEUMnGBscHRI1KSsuHwM0JygqLC0gYVJENi4vH/xAAaAQACAwEBAAAAAAAAAAAAAAACAwABBAUG/8QAMBEAAQMCAwcCBQUBAAAAAAAAAQACEQMhEjHwBBNBUWFxwSLRMoGhseEFFCOR8UL/2gAMAwEAAhEDEQA/AMmy2jK5zp0rn/KKHOdd3jGQhVj+69csHBGxPW6x9B9qCr63mbt0DHk1dY1BgHdelLxgaE0SHUAn/wBhO3g9IAP7HAq8ipXJPaW2+lNSDg3CJq1Z63d7zqfvVOCsTJb6iVRsg53wC5H0FJqVRn09kDxjMdI+yvHIDxcd+f8AUa5GQbCabJyYiPLJ+9SziR0UEnMgJJH+LIriRmOzmt11MwjPZuSVH5om1gSB0KsF0Ankf7RrMLGojTkDjPacahv5VdCBFvg/qN/HQYCFnjVSTnB38dZrtxL2DnqPpg05jxuw7XBNa4Bk8rKlvLmMNnkhHotD4ck/RsbJjOgjBON9QP2NBWRvZnkOygtz7eX4NOmP2SwSMvrIHPGOZz96QKgdLeh8JDP5AQco9vZctdIEYzkOgJB8dRrtu4e3gY7ldGPmP50CBstA+rmvL4avzUSQhF7S0qcu6jZUEDXJG10Aa5KXLiExxgnCpgZ8CRUpa9ilnnLRsgAyu5P7RqVmfXh0LJUdVxHC2ydSP2HpCW1YECMNp1EElcAqTjwINBhtZODEdSiS4yoByNODp3+ZNaHTkcMSR3ysxlnCq2TsAIl5edFaz1wWrqypKtw+Mk4K5Vx6E/M1zW7Ydyw9/t7rOK1gOUpa1VZrszPgqkSjSVzkmMnPyK/1ioRG0KSYHEdmXVzxgAj+I+dUtNcVoZWXCnCAnnkRPkH4ZHnS1uzTWYIIxFqdge7So2+ZFUahdecrLQ2uA2eqNaM8TRI4KgdXfvAP5FWludUseDytyf8AVQXH/j290rAhmbO+4wAD9V9apAw4B4gBXPDbfnjP59aeyoIB7hCNo9AHXwjdHypJCxYZMSK6nPIk4+hNDfLjCjVI8jhN+9SMeYpnpOQwXl/GWBJuHcYPYzKw9KlmvBKymNtLRCSNidieMoP3FQbTFAEcfwg3/oAQr6zl6OPs56zQBHfcbZzn1NV6Rm/8Z8HGCo9P5U5/1I6tfXUxfKyvwypGNlwTv45PlWfa283STTpCVxD+rIzHZVAOT49lJ2av6Mb+Xso2thYW9PdFuLWS2uFCRlURnAGchVO6b+IYVOiYxLIzdVliRnOruA0j55INaJZrpbmJGCtKkeknlsiH7UpYW0tpFcXJQhCvDY8grls6R8gP6Iqm7Sd2ATf3AQ72HAayCzrqVUuJFXYZPnUo99a2wW3kZnDyxl2weZ1sO3wAHyqURqgkoHbUQSFodKWssPRkEk0g12t1wsLuHOhASD3DSaO5SONN3KRyyBdX97EWxz8UpuG5WXobpZLhMjXK2lhz90g/Qg0sEJeFdKmJZRlG3yHaQD41yQ92GHcJ+qw7wBUuFa46LMMJwYmkKJz1ZcqBknb3hv4UG5MEHScaRxRLEzMrIFABHtJG47sLj4AUpbzyRNJEx6yuM+B4ikivQ37CadJlxritjuSdg0Lk+oHlROmmYOVyidVsLrD6Qsx/2qKS2zkdbQoyOu2MDu91fnWr0j0LBKvEVTFAJCGEWF56yTy7wg86DHbIiX1vGzmKCJNDPuSVy+Nsd3rTXSFy0PRNwspwyMp2PYS9C6o+QGnj94Q47wse7tPa5p7yd/0ssqp39RyGznsZOXhTsdpO9j0XBHIrcSFTrIIAIfiYPyO3fiuz28adCmT3RLw49DDJVuGzMd+8udqdu5GbpAsjgLbkMwPaCrDb5kVHVXEADIeP9UDlmyLbm8imfUxw04y2wbWRn/TWh0XZNDZxWM2iO5ks542cDURqdCB441n1rMu4Z16HsF1BpdRThjtMjMRv4acVoRXJfpaKTUMLpjO+/W4f/Gqfiw2PP6ZfdXvRiz0UlYRn2yzt43ZhPpPLJUAMufH3c1eQNcdDPbRYV5Lp5F7dWIyQOe3u4q/RsfsnS1guksyW7FnPYcS5APxI9KGzpbXl5D1f0y7oOxdSk7fI4oiSX24X+p/Cm8m4W/0T0d0fP0TZtJZwSngqcyIHO41Hc+LE/OpS9ldpbw8GPZIyFUZ5AAYqVzqgql5IJQEzdZMU8TSQRhQfaYoy4O4YlkXt8ABQYLoGJOsdKTJg536rSfyoFuzz9KWjjdOJGp8DrB+gPlS9ywgxoGoMI2wN8dXn5k+ldrc3I1msocCGtTVxZi46R4cTtgI2TnHWwzg8uWob05auWkbjjCtCImQ5BBED5B7uYrPsp2XpN3blJHIQf8KNt/XfTN9LHHdTMB1m4rc+3rp9BipUYXek8kDXEQzguWly8sV3lgoZSQfDSy/WmWk4t+BIuYWVCpz/AHkjZ/TK1n3WLdeDFsgQR5AHMqDnHjuaelmaCCJASyxQzRlwNs4H4NG+hDiQg3swR/1KKsXtvQ9wspKAHjxsD2Kqg/Rhv8aC05iuukJ2YhXjZVBHYqc8/EnyrllJw+j+FKwOej5H2PMEnHoaRmnaSyjKjLShgh+JcYz8h6UkUjjLeGj4TsctW4EDJHAHxjhOGO+QupsemKzbQMekOj1RCkj6JpdWdtLsDnu2QD41aO60uurYrDg/HhtR5I2t+kIZycjROrHOw68jL9/Kha0g4TxSi7B/Q+iGZ83RlVCRHFKAR+0cbeppW9UujXrAqZXaMvnbHDUDb4lq5C7B41YaA5Z9zzGoA/eiyhukLZ4VYjTMzEDGSNWDz8CT8qYKZDhHZG2phaDwCVh6QI1knYuSN+zl9qlaEPRVm5k9piZwraImMhBKAAdhHaDUonNpg3CUf1Gk0wQdfNJdHQS20qqSsrFo5VI7FDkE78jgNXLZwzTAKWHCTDMNtsdvfj61y1udMsJcYYW8in4jX9KrKvs0EKruH1rsNyQ2n6CumGerElmSYOZ14RbaNJgro2gBGjG2d5IySfQ+dcuo2dxcpkNHqLJjmvEO488/Dehe2qRI+BvoOfHSw+lFsGa5kdmQtA0RjY5wCTnbyBoN3NQKHE1uI8EVLB721aVGCSMqupddiAi/ht/GrWjF2VZE1o10usFcgK2ob+HZT1nw4bmC0Ul41VkBbtAzzrPtziFpUbVxRC2lV5aWXJ9SabglZg8mRwtGvkn7p0BuZCdWstGynlhT/wDY1ThxTRWIbrKqREKf/iM5P7xrIurp3jeNVYsZ5tgN/wC6c/emIZBxVUtpMEPLPcFpeH1TrIozSIpi/NKQJPNMNABDjh6jyRmTAz4HvrVlkF0twNRDIWKb4GS0i7/vGkejZZfbFVhhmkiBU7EYO+c0W/uETXMGOp1jUjO2AEP+40t1ES1yfUcXOwdo+iHCDKLZXALZVSRjKgs5O/yHlRniaymkMalY1RwSTuxJYg93JR5iloLd44kljbWYwHkOcYBXIx83prpBmNmzMV2cufFSmPvR7q6BzvVhGRVvamSNAx36x+RZiKlZqQXt7GsltCXQDSTrUYOeW5qUp1BxJICrdUx8TgD3R4ZRPfJDLlf0lB71yoHyO5rl/MpktjjVpj1DPMEt/wDtLMwW9hmT3nXLb9zY+gq81tJM+E0KVUEZP93O31FdTCbBODGh7SctBCvbdbe2jGS5lbZV3wo3A7+R3rRGm1ikEIATiK5A205BH1+tZ9zngRNIMMoBU57MAH6HyqxmEvtCZ3bYZO2QTiqwgAq3MLmCT3/sLStbgp0gVcgkAsMeIB+hpOK7CLKOQCSY+AxQeKOI1xjfhqMjt2GftQ3GuXhQDCEENgZwCxGfHmKHCcggFITfonrd2e3KF1yQzDuOpGx9aTQ9Sa594Eac92xz9BXTIT0jLHEvPZVGwHVIH2ojGNWmj0gRsTlezGcfipgkdkQGE94Vn0xdIi4D+/cnb5j7tQrvJt0Y78MorgDY9Vdz+6B86FKxjRXcb8XUpB7CPyPSuHi+xza1YGQAhSN8Dt/ruqsM8EbWRBnotJZDDHcSgqIyEAA7Nhj+GuMyzM8bNhdPV8Opt5EUlE4ks3JySSNvFVOPWqx5QSu5BKxB1x4jH3q8JN9c0sUs+f8Ai1bK44MAw2z4OO7qgY9KlY4e5KLw4ZXGOaqSO/6YqUMngELtlaXEyrYAtdQweENz283++KYjlIKswwSqgg/5f50G3ZWjkHYdO3jgn71SZ8rEQNtWGI+C1tLQGYwuh+3xNdOf+Ic8plWFTy4eD4HUakpYmN4wN1y3ZnrH8UVo1CqzAF1Qqe7Zc/Wh3IWMosYOkLv24GT+ao0sLTi1yTdxhAHCVH1Jbqd8vjOfL7UeJUiHFDHUVA35bhW+9AmJ4UOxI4eT4cx+KJdK4ggRFIdhg57wqbelBAEkcITXbOC10Dl4XLRSb9JtXvSAY8Mn/j611G/XfVhgxJxnxzVoWEbLp26sf9etC0DWpXUckpt/XPemGm0NEa4JDaJxkHh7okMo0wE7tpIz5/k1cSa7qBHBwYtDKdua0p/Z6M7DHV+dM6gJ3k7SxXPgNP5NSmJEHh7fhU+h6D0n6qsWXnKqNOlA2Mdukc/WrOgW4uYlzpWIhd/2cYqiy6SG/a/4ijMS086nq62YA48KjWNi2acyiDHy8pyzZII2VCQCx2J5Y2+1Ss/jhCQD2k+e9Sr34bZcuts8vKpGqx6cMSHfHyGRRYVAsGLgNlwR24GP5UBm4rq2rHDjVsY57gfejKCIGiIK493fbfI+9LDhEL0VJoa8kat+FV1Ygad9SM5HLG2n6/WoiCWJ3BOvTgDs2ZTXHdhjblFjbvzVYjwUdF1EEAjPbutR7wSQoAMU6yTTxoJ5kKgqoUY5DBcEj6Vy8mwY9/8A2Efw1WVmE905GxAK57cEb/13VJNJ9oY+8hcqPjt9KhdMxqCtLjYhurlLsHNwUiUnqoFA8AKvbI4MZYbiQSDt22/NGjIDo5YkxgKPHKn8VSQGK4wgbEaaQfl/KoSBc6us4ohvr668qptxdTSanK4Dads8jXJ0SPSAzdZWkO/bgH7UTdXmk1HC5QA9vj6VWRz7PuB1SmoH/AaIFoaTxVvY0ggjNVli4M+MgCN8gdw2x9qo0p4y5JGSxHmaaaLjPO5bYr2fI/7aB7Oxs2kKkujYbHYBkjHxJFDUOF1slDTIktFvYoCwq6KzuwYjkDy7PtUqyQSzICrINOxyTUpFuSUKUizVqxjiQTGIBppppUHYT1cAZ+OfOleC0rrCcLIsZZut3b07x0RraQHJbQxz36ANvKitp9nQPoD7KJAuTghzjPzFcn9w5jRHLyU1z5A1xWUlndzRyIiDVb++dQwD2eeKdHRsixNbSSgBrgQh8ZPV1HOPEEdtdBFnBcuTlp40kJztuWx6Y+eacVlmtbiZmOYbzWMHmeou/wC8aCptNQk8vNvKGmRx5LJE2u2VSQQWAPm1WfhSXtuhRdMoRXA21ZYZ5VyOySfo0GHKlW1Mc8wFB88t60/0K7ypAuQOBK5YE8+oq7fMimv2iAXDr5Vio4xPRZixSRWcksqga30BTnUpUb5HZzplLNpWMjOumVG0YJznOjf97xp2aCEzfqMXX26R9JAxnWikHvG5rkek9GW5XC4hL5xk5Daj5kVTtrc6nbifdW11oOrrN4YkuIrd2/tXiB0nkGGfPDVLa3Dx2sxOtZZlDxkZ2XGflhvQ1rwR29v/ANQSoqf2EICtk8wyp/CaQaCWyS1V5UZiXmbTnAB0jA7+yqG1FwDRy8H8IC699alCh/VWGNRvOunbYklnH4rsZY212qKdSxhjv3aSfSiSwpb9L26QbQ27KNzucSY8+tTXR7pDf2CjGqReuR2niEfQCmv2olhcO/3KY2p6Y1ksu5jWzEGhsiaFJcdxIwfUZ+dSvRy9HdGzvia31cICNP1GGFHIbHxqVnp/qYa0Ag6+aAuc0wF5ZZzJCyjI0Rgj5DP2phmmkEduCvEE2jOdshcVKlMcBZLJ9I7eVadi6Wzasao1GMfsjP3o8E5/7bMq7amP8a1KlJPwjv5TRZp1yVkzDYzIAPebGOwEJj0xXbFihV1OACVx/icfipUoT8B7rQ/Nw1mgyzFrh8+6LyXz1IavAzRWkasfcjYDHeGwfrUqVcWAWVmZK49yw6Tu5O1io/1rQbuUzW0UpYjTGq4Hb1dX+31qVKsACD2+yXmQiMTHfuSSxKB/hl8/ehW9wVl6MbG+vGf89SpVtEsvqxTTYQNZLQku2E0nxH0FSpUpGEJDicRX/9k="
}