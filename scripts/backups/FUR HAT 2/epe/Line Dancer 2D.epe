{
  "name": "Line Dancer 2D",
  "id": "XaDfg9Nzn6XXAv2RM",
  "sources": {
    "main": "// Twisting line effect - basic idea from a PC screensaver I saw\n// long, long ago.  No idea where.\n// Re-imagined to be uniquely Pixelblaze-y\n//\n// Now with twist control and kaleidoscopic mirroring\n// 10/26/2021 - ZRanger1\n\nvar timebase = 0;\nvar t1;\nvar zoom;\nexport var speed = 4.6;\nexport var twist = 1.75;\nexport var nSides = 1;\nvar slice = PI / nSides;\n\ntranslate(-0.5,-0.5);\n\nexport function sliderSpeed(v) {\n  speed = 1+(9*v);\n}\n\nexport function sliderTwist(v) {\n  twist = 1.25+(0.75*v);\n}\n\nexport function sliderReflections(v) {\n  nSides = 1+floor(6*v);\n  slice = PI / nSides;\n}\n\n// sets up a kaleidoscope effect - makes the image repeat over evenly divided\n// rotated \"slices\" about the center.\nvar outx,outy;\n\nfunction kal(x,y,t1) {\n  var angle = atan2(y, x);\n  angle = mod(angle, 2.0 * slice);\n  \n  // uncomment to reflect each slice so they can be tiled\n  // evenly if you like.\n  //angle = abs (angle - slice);\n  \n  // rotate image over time\n  angle += PI*timebase;\n  \n  // map new rotated coordinates back to original image space\n  var d = hypot(x,y);\n  outx = d * cos(angle);  outy = d * sin(angle);\n}\n\nexport function beforeRender(delta) {\n  timebase = (timebase + delta/1000) % 1000;\n  t1 = timebase * speed;\n  zoom = wave(time(0.075));\n}\n\nexport function render2D(index,x,y) {\n  var h,b,radius,theta;  \n  \n  if (nSides > 1) { kal(x,y,t1); x = outx; y = outy; }\n  \n  radius = twist-hypot(x,y)*2.4;\n  theta = radius * radius * sin(radius + t1);\n  x = (cos(theta) * x) - (sin(theta)* y);\n\n  b = 1-wave(x*4.6*zoom);\n  h = (x * zoom)+ zoom + theta/PI2;\n  hsv(h,1,b*b);\n}"
  },
  "preview": "/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMACgcHCAcGCggICAsKCgsOGBAODQ0OHRUWERgjHyUkIh8iISYrNy8mKTQpISIwQTE0OTs+Pj4lLkRJQzxINz0+O//bAEMBCgsLDg0OHBAQHDsoIig7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O//AABEIAJYAZAMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAADBAACBQEGB//EAEIQAAIBAwICBgcEBwgCAwAAAAECAwAEERIhBRMUIjFBUZEVMmFxgaGxI4KSwQYkM0JSYoMWJTRDU3Ki0SajRWTh/8QAGgEAAwEBAQEAAAAAAAAAAAAAAgMEAQUABv/EADURAAECAwUECQMEAwAAAAAAAAEAAgMRIRIxQVGhBLHB8BMiYWJxgZGSwjLR4QUzUqKCsvH/2gAMAwEAAhEDEQA/APkYuXjczjtlbJ+BqpZsdH7To0/8tVbTcKSW3soQo1pIiybdzb0Q2toL5rsoptzba8Y/e5mmiEeFMCeWoqlDaCBRpx0pqsIy8zW4XYM7H7wxXdU32bKjHUyafeowK2uTbQRXsToDI0twsR9gTaqmW3EVmiRDmQy27S+JAXelmOwiYFZT1luThFjOMg3Hh9qLIjtZDOqMOqqas+zP/dXhs3Ftc6sZUsvxXc1qC9txcC5ECi36NysY2zzM1UzNouYXVRJdyyPHt2atj8qO22ZkM91NVrTElOzl/aml6Sb7K2tOsAQwJ28RkU50uPnNHzFxgHFUkgM9tHbg/aWgZpDjt09nyoy20TcUW/A+xMvL0/0809u1MaRPs3VXnbRFaJyur7Ka3qwuYZJIWM6nlhR79Jz86sqRSSzjmLiZXRd++Q5+WKTg4cEs3hY9e6SBkPhqYipcWDGyiijYh7VZ3cj+RsUB2ljm1OHFROtHqT7vznwTekG215GeZzsezGj61YwqksGSDyUVCfAx7n61TkMON88P+r6+Tj+nq+tLQCdbG4SQ5kuAjp/UODRGLDLjXF25CYkR3WzmffTREuo0e4Z9OdeHzjxGfzqU7YvELKNJsa0BQ/dOPyqVZDiwLAmMETf1N8ICHYup6I9rIDxjiCk7RmFlHhpU1lE5/RMPnradH/szRoJSl9eS5/agfSltJ9B9GyfWz8818w1siPFugXXsgA+aZvo88TswP8wux+IGaDbxf3jerp9ULjy2os5L31nJn9mD9KkIK315If3wMfAUTXFraZcU3pGtddjwkkdJ/s7nH73y1U3cK3pPh/ZsD8t6Dyj6EEGd9f55pmVC99ZSZ2Rd/jTS9xPr+EkxwAB4aKlujekuJYIy6FfxClleVP0dVwdxcawT4Y009BHov7yTOzjb4UDkn0D0fO+rGfjmsM5ifZ+UsxQ6njqrSySR3/DI8bcqFT9xs1I7hmvOKRkHaG4A+82aZnRZL6zlHYgc+Y2rkMKi/u37pNA8xvSLQs3YcUcmuMxzRJm9PoTn6Tnpur/14osshF/wiMLs0NuG+DEmgm3YcB5O2rOr/lijzrm/s5B2RAjypnVnTtQiEJeizr+6kh4jdRr2CZ8b+LE1K5xC3aW+mkBGGbNSqmFtkTSHQBaNE5G2TnxK/SrqBytPs/OuIp5jrj1MGqh8W4f26alNbleapnYsD4FqsANRP8WBSxkYOgx6wB865zmLuucYBx+VeEJxuQmETRNBBoA7u2u4GV39XA8qRNxiPXqPrZrjXOGRcE50/I0YgPQGALzzNaAxljqGWzXMDRjO2c1n88kyAqdg3z3qC7HL15I635VpgPzzQiC3BaPYV39XIFQNh8+JWkOk4ZF1doHb86stwS8gyDoBOPd2UswXBMEGVEwx+x092n86pI2Xz4FvpQufmDX3atP51YsC8Y/jGR8ayzJEBJAmfEnZnIFSrStpkK+G1Smi5HaYL0/b25binEo+5FXA94rO0sP0bE2+TL2/HFa8NxHDfT3LHq3LQ49wXekSv9zDh3+by+z28zP0pTLcxT+O6qlG1MANcCuXKYvrJB+8n5UKJP1u4THqac+VNXF1DNeRXCjKQtJn3MMJ86GlzFDc3Fw0eUmAI27dAw3maoZGeADZ5nJUjbYdrz4JD/4kSe386JMmm7tgO8Y8qLy2PDvR2gc7Xpzj72fLajNOs91a3KhQkKgtt/FtT+nfcG8hJO1wi0eDd/FJJqNzdL/Cvd3UDB9Ga8f5mM1swSRR3d1cOQEuAQuRtttUW0i9E9BODIG5hGd8ZrDFifx5N6S7a4QBwv38FlyI3S7RcY5irj47VaBD0y/X/TikPltW1LbW73VtMANNqAjHw0HJqq2sSz3koIAuo5EQ+JfcVO6M8iZHM147ZDLqHHgsPB9A6/8A7On/AI5pqQFeI8KX/UiiPmcU8bMGy6LtqNzzcfy6NP1qrxK09jPseixwKx8Crb0JcSbs9yAbU2V+W9YvEnZeJXKqxAWQjb2bVK05eGdKuJrgLkSSuwOO4salUsBsiimftbA41WbPdSS2VpECQU1bjv32o5vJPS5vMAYGcd3ZpqiW5a7u48Z6Nqf8JoPLf0f0jB055RPtzqq0OArLkI2tgEV5nXVHgLpBLBqGHOk/cOaI+qSEQlto1bH3t6DJDcC4iQR9e41On3xipFZX0080SJ14ca8nHYMVpldZ7OKNxgCZn28J8EyJpGvRPrHMMnb9zFChcrayAN1SkerzOKElndLYDiGocpTtv7cU36Hnt5o7R5FPS9QBHdpGa8HVmRnqlB+zNNTnoJgeSDI8jW9qCeprGn4neiGWVb8zY6/K388fSidFGqe2Ziegxl8+O2a6LiI2XTiuxn5RHs05+tOa+HictFQH7M+mch7qlDimnjjngJyJ2ff/AHbUUzStHFFg/qhWTP8AsGKIZIUurBGXLTRQsPeWOaustu9zfx46yxTBvdmsiBpBkeZqB7WEWwMJ+dqW6qot5J0kXhU40cjT35zqqySsILmIjJujI6nwDDq/Oqc+39H88er0nPx0YozPGl1Yx/xxxjyoC0TP+WopqvPgQwSBgXD2iY9SrR35tYYoOUzFI1yRjt0jPzqVn8QvVivpowPVYipVLI0FrQ1wqFRD/T9lewOcakTKhvo7e5u5wM9JRgPiaS6Y54V0ML1RJzCflXZ7ZxaWrY9cED3k7VVoJY4XTQS/Z2fu5z9a54iuM/PeiLOzkJp7i7knhn2BtAVGP5Bk+dCa4uYHluSx/WkIJz470Zppg6qIxh8lz4E+t8qBcM0saROVRIyArZ7QezyFY63Pz4IIcKYkW4cUWJmPDprHV6pDD5Vt3Ks/FOHsDsHlHyrAEkj3rMI/tZF/ZY7+zHlvTEd/K7pcDU0dqxLN7CcDzoWyl1jkhj7M1xmzvaiQ1vTgZY+JcXLnYxEeYpGz0T8PisyM67rV/wAKaW3aRpronK34McQzvqPZTdpw9LPisMRIIVtf3dGM/iFBEiMDTZODtEEOFYq7s0CpAI7lBfFf8DHGB570V1treI3ukE3qSavgaDavy+F3kWn9qI847iTv5UGd0aytY5CVSNX3x3Z3p5e7pKXWtLH3VIEJrQ0eFfVPNwqzLHhKnCifIbPfy80I8Pjna3ukcgWqQgDxGaqJB6QMmvE2c4/mxjH4d6LBcwpazBJAUAxn2D1fM1OHRA0Tybvr6hJtMNZcmiUk4A95K9zrP2jsdv8Acalblhcq1lGUAK47R49/zzUrmxY2023SFJpZ2yEw2cqLzslvcTcN4XowpeUJk9xJ6p8s041tEn6QGSSb7PkalXHfnGn5E0y4VrDhqKwGJYB5KQT50vcWbvdHDDUI+ZjPdkrXRYA+8846rbTnA1wfvScS2cdnexFGdpXPLZmO6k4Q+/O9HVIZbexhSJFaCRSxx242Pmd6p6NYAnmriHqE5703+dFEcNvHDI06gFw5I327W8jtTxDhA3TT3wxaoTOfxTogVuMpPgYa304+JrGhgHQr5CetPymX2ZY/9Vsc5BxdUBJIj5ZGOw4LfSsjls6cwAhVMRIPdgkkfCmCGzBuW9TwIVpvWyZ/sihyIbCCP17aZGbzNWk4kDdrfhDhbTYeP2uPzoFvcx2t280iEpJIjj2gE5FLreIkMSld47fQw8TzM/SpIzBOgVB2UCcjO/fVBW5eGG7ttzzmGW8MEn50cyTXFtBbI5DW7bnxzuPKl16sVwpwzOx0n/buflTMVyqb6Dqxk+3vXzFNhgTE8+CbYsumRjPSW5Mx3fM4wt8VHR2XHu2x9aXt5FXhvEFljKudJX2b7D4GgNcJ6LMSg51YHuzmpPdK79UdUjLeYoi0AUOSVYAAA7v9TNej4K0Y4RAFPcc+/JzUrO4VIVsEGSME/WpUD4snESXHjbI90VzhiSrOY3h6NzMNbrJqx3amz8qjcUtBddP0llMnZ7dGK41q3TeJldsxtj30rHY4tkDDq9IwfwZq8sb9IF8x7jNdSHKIQJXyHuE11b63hha3S2BEyxnOewA5qknETJCsKwqvJDkHHac5FEW0bESFOtIkRXb+I4NGj4c8rTRBetFHMCcd+dqwxD9c+98U2QDLc8J6yVF4lM8sl/0cZXbR7MY//acMYgZbQoSbpnAPhpG3zq6Q44fJNpGGfPw2H1o93KqzxM2NUerHlRBpHVGFPZUKWMDbLWm4vHtbMLMmt47kT2gGlrONiT49/wBaoiWc9wLxiOW8/Lx7OX/3Qr2VgGkiPXlADe2syQMjGME6QcgUD4dPXWqdDhvFSct1VtxcKs2gOWwzojZz6uTuKs/BI1jRo5yrLqbOe0qdqyVueqy6zhi/f7Bj5ii9Ml0RJrJCsuceBG4pzWhzpjPSz96p8M0qa/lPvwMrIVEmY86NPgMavrQTYTINLqC82CMeL7Hyqh4tJrZyw3TV8c4+lHPE83NvuCEYjy7KFsN1kTODd9U1wIudzguxMIU5bbFCUPw2/KpWbxG4Z+ITMrEAsTtUqOJAm8meKWCCJm9bA4mkIW4kTqz6PILg1Q3+E9Hcv7Xt+Pb9KDLarLai377SO4Y/BhTghhbiXTsdU3HLz/SzVbY8O0D2t0CgqwTAur7KDRLtx55XW5SDC2+B8DtQm47coZJ1Gk3AIHsI2BpmK0hSGOLSAbiO2fHjqc5qstrG0c0YAzBFcnHhh8Cl9LC6OXd+SK0AbNml3l9W9JniEpItCW0h9WPZp7PPegrdvKnMbJ5SoN+/FaciRK5uQBpF1oz/AEqGsGhrWHRjpEUJx47nNOMaGXHxdqEbdoxLe31vSWtSsZKnrsB510xBp+VoJYx/nTiWpnuJ7YADouSPZvtQNEhsDxPO+nGPvYpjY8LHs3cU4x2kXf8AcNEJbaGaKeVUyFaU58OrkfOu+joitu26iV4Vzn+Jct86ba0e2kNsp2nM+PwDFRY5ZJI7fH+HktyfZlN6B0SFKnNeQo+kdgafnnySXot+byxq1cnmFO/19OPzqvo2ULO4Orku6lvau586cjuJQo4iR1ejYPv5mKaVJYlubZhhrqS4K/hpTo8EH13cEXSRslmx8OleNXMRbWA2du/epWt05bJI7ZwC0caA/hFSqoceAWCiE7XtDaBgVbaMNxfjSk7GGRQPDVuaVBYfojzs9cXevP3dNSpXz4NR4t3Lplol6p65iC8X4KgPV5Uan26NxVrWNG4xxlGBK8twB4a9zUqUkk2PL5IgxpN2PBZ5kU/ocSQeYbndvbj/AKp27kX0zwXTGABGmRmpUqoNBcZ5uTGw2SuyVbWbHGeNNgfsnIHu7KR5v/h2jTv0nTn2YzUqUVhoI8WrHMbK7NP3NyrcZ4N1PWiDH7wxRbGVfTfFspsgDD7oxUqVK4Cx5fJCWNncktY/sUdutq0Z9mvNaV46+m+FYXZxIx+8uKlSvPHWPi/csDRuXnf0gOeN3OO4qPJRUqVK6cH9pvgEp15X/9k="
}