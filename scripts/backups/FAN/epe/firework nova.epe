{
  "name": "firework nova",
  "id": "vrkynnKXTHavofomc",
  "sources": {
    "main": "scale = 2\nexport function beforeRender(delta) {\n  t1 = time(.03)\n  t2 = time(0.1)\n}\n\nexport function render3D(index, x, y, z) {\n  //center coordinates\n  x -= 0.5\n  y -= 0.5\n  z -= 0.5\n  //get pixel distance from center\n  r = sqrt(x*x + y*y + z*z) * scale\n  //make colors\n  h = (x+y+z)/3 + t2\n  //blast wave - a triangle's peak moving based on the center \n  //clipped to 75% of the waveform - v goes negative: +0.25 to -0.75\n  v = triangle(r - t1) - .75 \n  //trailing the outward burst are random white sparks\n  //between 0-12.5% chance depending on distance to peak\n  spark = triangle(r - t1 + .2) - .75 > random(2)\n  if (spark) {\n    rgb(0.2,0.2,0.2) //sparks are white\n  } else {\n    v = v*4 //bring the triangle's peak back to 0-1 range\n    v = v*v*v //gives more definition to the wave, preserve negatives\n    hsv(h,1,v)\n  }\n}\n"
  },
  "preview": "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"
}