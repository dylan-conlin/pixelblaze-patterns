{
  "name": "Bezier Testbed",
  "id": "h5QsuZvaZaXMc2aji",
  "sources": {
    "main": "// Bezier Testbed -- Animated \"Leaping\" curve\n// requires Pixelblaze 3 w/3.30 or higher firmware\n//\n// 11/2022 ZRanger1\n\nexport function beforeRender(delta) {\n  t1 = time(0.04);\n  c1 = wave(t1);\n  \n  c4 = wave(-0.25-t1);\n\n  t2 = time(0.01)\n  c2 = wave(t2)\n  c3 = wave(-0.25-t2)\n}\n\n\n\n\n\n\nexport function render2D(index,x,y) {\n  d = bezierCubic(x,c1,c2,c3,c4);\n  v = 1-min(1,(abs(y-d)/ 0.165));\n  hsv(t1+d, 1, v*v*v)\n}\n\n// You can also project up a dimension. Think of this as mixing in the z value\n// to x and y in order to compose a stack of matrices.\nexport function render3D(index, x, y, z) {\n  x1 = (x - cos(z / 4 * PI2)) / 2\n  y1 = (y - sin(z / 4 * PI2)) / 2\n  render2D(index, x1, y1)\n}"
  },
  "preview": "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"
}